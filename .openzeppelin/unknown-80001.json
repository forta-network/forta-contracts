{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x107Ac13567b1b5D84691f890A5bA07EdaE1a11c3",
      "txHash": "0x05b4262214f22ef7e90634a401e9bd6b568526fb5642963136d90bdf61b48fa4",
      "kind": "uups"
    },
    {
      "address": "0xbb12476ab9f27d3b441964B0aFC03D14a82e1D64",
      "txHash": "0xeb761b35d307c30baca49115043dfcc856511affb22fabd7ce4bf031eb4cd93c",
      "kind": "uups"
    },
    {
      "address": "0x61447385B019187daa48e91c55c02AF1F1f3F863",
      "txHash": "0x96e5450980c452e897a343f0f0f6492645f5464e9d65cedbea24ee455a3bd476",
      "kind": "uups"
    },
    {
      "address": "0xbF2920129f83d75DeC95D97A879942cCe3DcD387",
      "txHash": "0xdb0f58260d4c25541724054876895d1b572aeb31d0b3f6aa6f18a08ad3e02ad4",
      "kind": "uups"
    },
    {
      "address": "0xd46832F3f8EA8bDEFe5316696c0364F01b31a573",
      "txHash": "0x424d5dbff6cb1b4ac3c6424679e316531f86524ae7777c38b493a7cd84e4102b",
      "kind": "uups"
    },
    {
      "address": "0x5Cf7008aC441Ec1797fAfA4EE132eA4277E9239B",
      "txHash": "0x74e5c36c5d4c1d7ae47f08d803c9695c9ec9849753138d1f6634f61974f6c2eb",
      "kind": "uups"
    },
    {
      "address": "0xa30c3951f85941bfe474620dA25DEb90283C99D7",
      "txHash": "0x15ea76aabbf5f1fd7119e74010146cc88746428840b10c38dba7ee0fa430b03d",
      "kind": "uups"
    },
    {
      "address": "0x634C83F3213CcfC895A4e6A2c137b2B572fa64ad",
      "txHash": "0x667cb934eaf86cf1a7070c76a327a863564133715264f8b55fef199b6766a23c",
      "kind": "uups"
    },
    {
      "address": "0xff18A2178E6FbF624E9B0a6f7c706AA6B5D2325e",
      "txHash": "0xf4a5d3451d430605c2d0d91f0feb047a97c9c833488bfe05946d927f21406d19",
      "kind": "uups"
    },
    {
      "address": "0x1B2F9edA5E29A92f92ba87bF354ACe37879939ed",
      "txHash": "0xe598d97152f18fa3925ea76fc109b0b380777486618b3827fdb64e47b0b0df72",
      "kind": "uups"
    }
  ],
  "impls": {
    "fbcfb595ae88bcf1b56c42a512417fdea38a2e519b1894c6b0f503bc336c6802": {
      "address": "0xc6b8d94F924eF21c225E23AB14a6e89A804BeB60",
      "txHash": "0x5e419e54b6afcadea0e71769fcbc910bf96ebd245ea95c1cbb65acd41889b393",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)4337_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:39"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)3148_storage)dyn_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)3148_storage)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:262"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "FortaBridgedPolygon",
            "label": "childChainManagerProxy",
            "type": "t_address",
            "src": "contracts/token/FortaBridgedPolygon.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)3148_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)3148_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)3148_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)4337_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)4337_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "79e1e80f85a44e8d51c84cc4618a46b77301c9eec51b85eea034b7f5a09e6331": {
      "address": "0x7210AE70e1d9B3160c67247Bea3EEa6950a2d51E",
      "txHash": "0x3213474c3fca62ada311931e932415b69d2ab1abbe845cc54415b87c7816586b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/access/AccessManager.sol:43"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)5123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1ba2e7616121bd110cfc05e7e53d00b91f4de7d5fd1b44b0ead88252f09df6fc": {
      "address": "0xa9274646a0547521D98327ded523cA5557817D61",
      "txHash": "0x39c001af8643a5f22cb3e8195b560029a370dbbe018b3dbb43ab068e3e1b289c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Router",
            "label": "_routingTable",
            "type": "t_mapping(t_bytes4,t_struct(AddressSet)16113_storage)",
            "src": "contracts/components/router/Router.sol:17"
          },
          {
            "contract": "Router",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/router/Router.sol:67"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(AddressSet)16113_storage)": {
            "label": "mapping(bytes4 => struct EnumerableSet.AddressSet)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(AddressSet)16113_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)15812_storage"
              }
            ]
          },
          "t_struct(Set)15812_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "900888641d15f85867069c70af51f12eea5a527999dd0d3ca3eee3f1f9074ecd": {
      "address": "0x68Dd734613ca12cb7b7Ee9205da36Dc3098e5370",
      "txHash": "0xbd564248241efc8cae9c494d3588ee09a85d90341c4c7b7215aaefbecb23295d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18929",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:25"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:94"
          },
          {
            "contract": "FortaStaking",
            "label": "stakedToken",
            "type": "t_contract(IERC20)12836",
            "src": "contracts/components/staking/FortaStaking.sol:42"
          },
          {
            "contract": "FortaStaking",
            "label": "_activeStake",
            "type": "t_struct(Balances)21948_storage",
            "src": "contracts/components/staking/FortaStaking.sol:45"
          },
          {
            "contract": "FortaStaking",
            "label": "_inactiveStake",
            "type": "t_struct(Balances)21948_storage",
            "src": "contracts/components/staking/FortaStaking.sol:48"
          },
          {
            "contract": "FortaStaking",
            "label": "_lockingDelay",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Timestamp)14390_storage))",
            "src": "contracts/components/staking/FortaStaking.sol:51"
          },
          {
            "contract": "FortaStaking",
            "label": "_rewards",
            "type": "t_struct(Balances)21948_storage",
            "src": "contracts/components/staking/FortaStaking.sol:54"
          },
          {
            "contract": "FortaStaking",
            "label": "_released",
            "type": "t_mapping(t_address,t_struct(SignedBalances)22102_storage)",
            "src": "contracts/components/staking/FortaStaking.sol:56"
          },
          {
            "contract": "FortaStaking",
            "label": "_frozen",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/components/staking/FortaStaking.sol:59"
          },
          {
            "contract": "FortaStaking",
            "label": "_withdrawalDelay",
            "type": "t_uint64",
            "src": "contracts/components/staking/FortaStaking.sol:62"
          },
          {
            "contract": "FortaStaking",
            "label": "_treasury",
            "type": "t_address",
            "src": "contracts/components/staking/FortaStaking.sol:65"
          },
          {
            "contract": "FortaStaking",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts/components/staking/FortaStaking.sol:445"
          }
        ],
        "types": {
          "t_contract(IERC20)12836": {
            "label": "contract IERC20"
          },
          "t_struct(Balances)21948_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Timestamp)14390_storage))": {
            "label": "mapping(address => mapping(address => struct Timers.Timestamp))"
          },
          "t_mapping(t_address,t_struct(Timestamp)14390_storage)": {
            "label": "mapping(address => struct Timers.Timestamp)"
          },
          "t_struct(Timestamp)14390_storage": {
            "label": "struct Timers.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(SignedBalances)22102_storage)": {
            "label": "mapping(address => struct Distributions.SignedBalances)"
          },
          "t_struct(SignedBalances)22102_storage": {
            "label": "struct Distributions.SignedBalances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_int256)"
              },
              {
                "label": "_totalSupply",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)18929": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "dc26b0176640e2e2f2c554474e9d0527523f1077cce6523c5bd3ed0b3477146a": {
      "address": "0xdAFcCfCd6C1e0Ca0E9c9C91D532958F79050388E",
      "txHash": "0xce5f78fe1728cef4d662ae4cf2fb6ad3639926cb894bbc4a1446ded6cfe9c06c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18929",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IRouter)18929": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "df98891f8834805253da95809d58311054bdade696fd02f86f48906981052ae8": {
      "address": "0x853b7ed5F43cE735de30bBc2D17b8D67CBEDe076",
      "txHash": "0x2f2287ad953cb6d4368a1291fa224080ccf531fc8461c4d4210c1e9b9dec0764",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18929",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:79"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)15671_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:69"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)17553_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)16270_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)16270_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:49"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)16270_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)15812_storage"
              }
            ]
          },
          "t_struct(Set)15812_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)16270_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)17553_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)17553_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)15671_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)15671_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)18929": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "fd5b1f78f6226da0b5fcf77365e8c7c756ff0bccfd2c4e7fa78ac343da847cec": {
      "address": "0xa26D3d27c200314291b16f6c60aAC814Fa8feA5e",
      "txHash": "0xe3b4a85dc9fd14ef6436711283298a72336024241f2ad523d0f89025b00f9d48",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18929",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:58"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)16113_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)15671_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:73"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)19838_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:11"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:25"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:45"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)19838_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)19838_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)15671_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)15671_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)16113_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)16113_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)15812_storage"
              }
            ]
          },
          "t_struct(Set)15812_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)18929": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "cd7a7fb2226017ac597be2dab7ec68105d730acf267af02b819eda25e8548765": {
      "address": "0x08f42fcc52a9C2F391bF507C4E8688D0b53e1bd7",
      "txHash": "0x949050eee5eafb1098e869f36a36b1f1091ec9a91509aaba7c3182586188c416",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18929",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "Dispatch",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)16808",
            "src": "contracts/components/dispatch/Dispatch.sol:13"
          },
          {
            "contract": "Dispatch",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)19251",
            "src": "contracts/components/dispatch/Dispatch.sol:14"
          },
          {
            "contract": "Dispatch",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)16270_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "contract": "Dispatch",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)16270_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:17"
          },
          {
            "contract": "Dispatch",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/dispatch/Dispatch.sol:129"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)16808": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)19251": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)16270_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)16270_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)15812_storage"
              }
            ]
          },
          "t_struct(Set)15812_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)18929": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a324754dc382273ac3fb69bd044b5e4d2a363866b1dba3b7bb79aa2fbae71537": {
      "address": "0xECd9dD8d0e190B1D41ce9d3cd9b932b7ECF6003A",
      "txHash": "0xbcddab83e1d277acc29888dd7fd9f6f9ba69508acd7668ec6ed8b493c95948f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18929",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "Alerts",
            "label": "scannerRegistry",
            "type": "t_contract(ScannerRegistry)19251",
            "src": "contracts/components/alerts/Alerts.sol:8"
          },
          {
            "contract": "Alerts",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/alerts/Alerts.sol:76"
          }
        ],
        "types": {
          "t_contract(ScannerRegistry)19251": {
            "label": "contract ScannerRegistry"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)18929": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3ff96c624bb138a21496981a041dcc4c1b1152ec2214bcf0bc6c0d1ed3e1c581": {
      "address": "0x69016933D56eaa093C1bC7187bb5e33E69cf5d0C",
      "txHash": "0x047205d16b45d16a05fcf5b9f784b5196d1ca7e0cd61501407179f7a6373d7b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)10527_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)8316_storage)dyn_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)8316_storage)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:263"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "FortaBridgedPolygon",
            "label": "childChainManagerProxy",
            "type": "t_address",
            "src": "contracts/token/FortaBridgedPolygon.sol:7"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)8316_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)8316_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)8316_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)10527_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)10527_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ade944ea528bdfc90dba51a97a56f7956976c12f88db87e899c03ad971ec642a": {
      "address": "0x341fd86CBa3896d869586e1Ba2eABEE0bB72e341",
      "txHash": "0xa16ce1ea65198e05660048dd88cf97820a2972ce4df25824cbe35825940066f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12009",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19173",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "FortaStaking",
            "label": "stakedToken",
            "type": "t_contract(IERC20)12838",
            "src": "contracts/components/staking/FortaStaking.sol:46"
          },
          {
            "contract": "FortaStaking",
            "label": "_activeStake",
            "type": "t_struct(Balances)22262_storage",
            "src": "contracts/components/staking/FortaStaking.sol:49"
          },
          {
            "contract": "FortaStaking",
            "label": "_inactiveStake",
            "type": "t_struct(Balances)22262_storage",
            "src": "contracts/components/staking/FortaStaking.sol:52"
          },
          {
            "contract": "FortaStaking",
            "label": "_lockingDelay",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Timestamp)14595_storage))",
            "src": "contracts/components/staking/FortaStaking.sol:55"
          },
          {
            "contract": "FortaStaking",
            "label": "_rewards",
            "type": "t_struct(Balances)22262_storage",
            "src": "contracts/components/staking/FortaStaking.sol:58"
          },
          {
            "contract": "FortaStaking",
            "label": "_released",
            "type": "t_mapping(t_address,t_struct(SignedBalances)22416_storage)",
            "src": "contracts/components/staking/FortaStaking.sol:60"
          },
          {
            "contract": "FortaStaking",
            "label": "_frozen",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/components/staking/FortaStaking.sol:63"
          },
          {
            "contract": "FortaStaking",
            "label": "_withdrawalDelay",
            "type": "t_uint64",
            "src": "contracts/components/staking/FortaStaking.sol:66"
          },
          {
            "contract": "FortaStaking",
            "label": "_treasury",
            "type": "t_address",
            "src": "contracts/components/staking/FortaStaking.sol:69"
          },
          {
            "contract": "FortaStaking",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts/components/staking/FortaStaking.sol:457"
          }
        ],
        "types": {
          "t_contract(IERC20)12838": {
            "label": "contract IERC20"
          },
          "t_struct(Balances)22262_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Timestamp)14595_storage))": {
            "label": "mapping(address => mapping(address => struct Timers.Timestamp))"
          },
          "t_mapping(t_address,t_struct(Timestamp)14595_storage)": {
            "label": "mapping(address => struct Timers.Timestamp)"
          },
          "t_struct(Timestamp)14595_storage": {
            "label": "struct Timers.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(SignedBalances)22416_storage)": {
            "label": "mapping(address => struct Distributions.SignedBalances)"
          },
          "t_struct(SignedBalances)22416_storage": {
            "label": "struct Distributions.SignedBalances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_int256)"
              },
              {
                "label": "_totalSupply",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)19173": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12009": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "d88fb5fdab0cd67f87757f00dff8b8d8fc42a1eee4b09e966e5c96c255f7632a": {
      "address": "0xadDE0D2C97b92E3e673470387cf9686A000e4bA4",
      "txHash": "0x630032a7717843a3cefcd4d27dd08d1f781a17e743ebed1a6fd3e9bba8fb9648",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12009",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19268",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IRouter)19268": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)12009": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f151ac853b844eba9563e6f15f585cbe97448d0f9e2b4cac1f6e954a92ae3773": {
      "address": "0xb9eC02dC287bA256f001296e9e50c9c4a5A52A00",
      "txHash": "0x0704de7a94b6f135ad9cda769fa19ead8b688d668295936470dd4bebb61a25aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12009",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18976",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "ScannerNodeVersion",
            "label": "scannerNodeVersion",
            "type": "t_string_storage",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:17"
          },
          {
            "contract": "ScannerNodeVersion",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:43"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)18976": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12009": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
