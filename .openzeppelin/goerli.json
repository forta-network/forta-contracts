{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xB4457590d9f1E03BEF165CC94Ed82C63a1e5bB4d",
      "txHash": "0x7bfc198dbfa60c425748bed836daf92feb1393491be034ab1a211a897cd7a8a5",
      "kind": "uups"
    },
    {
      "address": "0x848F1fF1fa76Dc882Ca2F3521265ba3F27e42158",
      "txHash": "0x1edf4692955ca96d72e3d20e70744ceb06490e59f617a89f2c9e52e150773443",
      "kind": "uups"
    },
    {
      "address": "0x779f6Fa8826f013Ce7580B8e815a4257DaaaC8E2",
      "txHash": "0xa3c963091c941f92d290a76ad69135294f567c1c3956a942b7f3cbe2c0bd43fc",
      "kind": "uups"
    },
    {
      "address": "0x65F22a702F88B53883A89F772449c7667DB9ab9C",
      "txHash": "0x7ff47d9ba4b9dc94a8a415bf9264875e3660e570a0d7b856955d7f9fdd4ffca5",
      "kind": "uups"
    },
    {
      "address": "0xA3A0EA252D3cf18B30c3ADa0E013671beEDb4262",
      "txHash": "0x0acd82f71bc11bc33680f35d4f1a5ff6f04f50e4862af617f8b56649db9c8f30",
      "kind": "uups"
    },
    {
      "address": "0xC0556fC048B0F189F412DBba536aBD1a4ebD1349",
      "txHash": "0x2b4e0ea7ad9184e5a66c8ea33c2058fd4d0e06e75e6166df09c424ade887771a",
      "kind": "uups"
    },
    {
      "address": "0x77Db997b9Ad5e14386aB367fa47de073b3743248",
      "txHash": "0x4aa5317a0e6858fd6c5daf0aa33fd5e05ae2d09bbdf5fba20000ab76c269eaee",
      "kind": "uups"
    },
    {
      "address": "0x44F5288D1B5a61cE13595835Aced1191889bB741",
      "txHash": "0x05a2531caa71a2c1d8fefa0bf064d09e6b957afba37d57807ec054778c6a0460",
      "kind": "uups"
    },
    {
      "address": "0xedc9e493ADa6bBBDF975D38c7025f3FD200DD86F",
      "txHash": "0xd9895db22e7a47483396ce2f6bd0ddd864c7833b06c141844095d0e74cb745bd",
      "kind": "uups"
    },
    {
      "address": "0x95d9a757ad9C25999ffE93f3067221F04ce1Cc79",
      "txHash": "0x41e14e0e52fd44da773b3e55cdfc74979c2380009ab77478ce10cff8f1c4fe39",
      "kind": "uups"
    },
    {
      "address": "0xBeDC289BdE5BA0395CF84927CB3f82b1d2423283",
      "txHash": "0xda0894eb045edbb3e5f8f85f79e583e17a739a261f152ef5ea7aec3db93ee2e2",
      "kind": "uups"
    },
    {
      "address": "0xc054a3DABfFEb0279E62669FB699a33D4cC5fC62",
      "txHash": "0x98b61d8e4d6007835b9169fb8ff8d58600f5b849ba609e3c052848522f5e3b96",
      "kind": "uups"
    },
    {
      "address": "0xe6dc38CDb33459823B4f9D1c2d8FE569cA7A1ea5",
      "txHash": "0x1c29787b8ab4e40465d7df8c70e27563ba464791224d752847ea36a6e1ca53d6",
      "kind": "uups"
    },
    {
      "address": "0x3D72d035B9e50330d1f3129780044Ab42b72BB89",
      "txHash": "0x40efc40483406c5b869406cec583dd5c818e040b14854cf2ed3b3d01fbb0e193",
      "kind": "uups"
    },
    {
      "address": "0x20b89b26a92Fb40536a27770BA03fd65ad7124eC",
      "txHash": "0x82a961d357a2d3e01c0b1da4ce472df1ff8511b8aafeac4e791d4e77357ae0e0",
      "kind": "uups"
    },
    {
      "address": "0x5DD1faE6F6d2097E7ba65fc5626ca5CB0f767574",
      "txHash": "0x6d2a7b3770700772e5cce3a17e9207bf4cf239d618b3ae93426c81b305d5840a",
      "kind": "uups"
    },
    {
      "address": "0xecad6ADD805230552a81Bb271E5d1908FC1AbAB9",
      "txHash": "0x251a77e2dbc0e101d085be54f001ec581c936ff530bcca27dfded8edf9d0216a",
      "kind": "uups"
    },
    {
      "address": "0x60a5FDe7D9C4b519CDDb4be1C34BCDaEC1633028",
      "txHash": "0x72667a8b7ad2e0adbb65b2801cc5bf2faad12ce27baf7bd5109ab42bc606d0d9",
      "kind": "uups"
    },
    {
      "address": "0x3A616aB08b975aB652ec8Ab27912aB4Df774147F",
      "txHash": "0xc385c066b8a2976556722ce756b647f866bef19a14d40ccb0fdaf6692964d47f",
      "kind": "uups"
    },
    {
      "address": "0x9BB5df28EcEd09cF8eec1d480074ee4431afCa1E",
      "txHash": "0xc56bbb68ca544cec8ae8d3eea46ec24696f96d5423b017b51f673bc04eeac02b",
      "kind": "uups"
    },
    {
      "address": "0x7Ec874154930297C09E9AD11aE122fE6E5Af2d67",
      "txHash": "0x05f636f367e6546ee7c9901cea105a635e25ce794b21ebd39f73a37f1b7f2fbe",
      "kind": "uups"
    },
    {
      "address": "0x0e841c73093ce7343de864B24536F59E1D55194c",
      "txHash": "0x75e3cca55638a5f08dc2a5b8db0b9c0a655cf8445a98057ba0be10941036575d",
      "kind": "uups"
    },
    {
      "address": "0x7f1a8df783Fa3F481F88d9a82239e349D4F5e485",
      "txHash": "0xdf8a4096767e54f0f7ed1e1a36aa62a4cd0c616a4800fb616b32f1f69fdc74a3",
      "kind": "uups"
    }
  ],
  "impls": {
    "d7ae2b8ef2419d9cd8b597e46f2238b9e43f5c34011ac49f7ef8e1ccde0c19cf": {
      "address": "0xc9d289A6B5d348D24C235D50f56e671A17572d16",
      "txHash": "0x35e97d2ea10b2f2a61846b8af571d67532a5b346339f09b9276895bcee24249f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/access/AccessManager.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "79415776a58b815f93a63a8dd195d2824759ab9b471849bfb420780c485dc7b8": {
      "address": "0x1caEe97ADf7d38378690501a9Cf3fFAd96ebE785",
      "txHash": "0xc34a491fed4f5084787b534bb50f7d2c2313ccaa2beb7a0b2b1b562495ffcd1a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)5469_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:39"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)3273_storage)dyn_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)3273_storage)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:262"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)3273_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)3273_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)3273_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)5469_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)5469_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a0a16de8ae7061001db50f43df15fae656c1f70d1130c53dc092c899499622da": {
      "address": "0x9A2abD3d5ED3d4A577e01Ba3aaE6f674FB70Ab84",
      "txHash": "0x3cdbd4065e04eae3c87e0862f2707527e028da473f7a7b872e78acce392a7647",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13188",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "Router",
            "label": "_routingTable",
            "type": "t_mapping(t_bytes4,t_struct(AddressSet)10860_storage)",
            "src": "contracts/components/router/Router.sol:12"
          },
          {
            "contract": "Router",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/router/Router.sol:44"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(AddressSet)10860_storage)": {
            "label": "mapping(bytes4 => struct EnumerableSet.AddressSet)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(AddressSet)10860_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10559_storage"
              }
            ]
          },
          "t_struct(Set)10559_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)13188": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1255b2b1fd4e8d037696425e3677913f99acbe42b3db6624c4a36e06630b1ede": {
      "address": "0x10110F156f8DdB9513c7525C785c7b3802bc9AFc",
      "txHash": "0x968bbdceed7bca588bb71fa9f3f07aadc71d1583b978464beda2fb224f7ab87f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)12611",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:28"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)10860_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)10418_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:71"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:31"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(BitMap)10418_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)10418_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)10860_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)10860_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10559_storage"
              }
            ]
          },
          "t_struct(Set)10559_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)12611": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "260b321d52335edba2ed7350a0194998a32aae69e32459995d16f3a407c66a28": {
      "address": "0x9C6C1a1fc9a06812AfE63218645193fBef22C6F1",
      "txHash": "0x6f29ba15e1fcb88fb0d370ba9517687eba4a96844943aeeccaea110dd08ed10a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)4354",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:65"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:65"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)4239_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:33"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)3213_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)3213_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:41"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)3213_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)3213_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)4239_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)4239_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)4354": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "b57ea8b2d9eda57a0e032456378f4da5e6732ef34eff0d91a5325af794bc4432": {
      "address": "0x773Cfa2eB659aB610835eB112d96bF45950981d9",
      "txHash": "0xffd3409b23def718cce0dc088f1994a220e6d1d4018ac9b699fd5750e490d301",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13188",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "Alerts",
            "label": "scannerRegistry",
            "type": "t_contract(ScannerRegistry)13445",
            "src": "contracts/components/alerts/Alerts.sol:8"
          },
          {
            "contract": "Alerts",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/alerts/Alerts.sol:76"
          }
        ],
        "types": {
          "t_contract(ScannerRegistry)13445": {
            "label": "contract ScannerRegistry"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)13188": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1e25c4e39d5f222d61ce94f770e93742ff4bdadbace9c0df63e8118392a3cf01": {
      "address": "0x4B2B3423bCFcD3DBa2f501B6291B2dFdBF762d2b",
      "txHash": "0x66420d83f07b40689d42f4b607a4fca96cdd420983a7c39a26f91105703ce00f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)4363",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:65"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:65"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)4234_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)3213_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)3213_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:41"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)3213_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)3213_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)4234_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)4234_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)4363": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "ecf425745760139b73957a4b8139a76a4475b9a20dcf300765c572695b411d89": {
      "address": "0xbd418b50C018a9305fca2909e11f81D0724C60B4",
      "txHash": "0xc8af7fe0ddd449af3835739d67ae07f9026930c6c160e9d93a3e3613cc4c63da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)4377",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:65"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:67"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)4248_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)3213_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)3213_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:41"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)3213_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)3213_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)4248_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)4248_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)4377": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "2fba15e51e6b60da1af3f2331558c881264e5b0fb5d6f9ef2bc798d6004be0a7": {
      "address": "0x9cfcD32934629C3D3a336a8591bAD041D10577Ad",
      "txHash": "0x7a85d60f287dfca51c2e3f2bdf48f02ade94d69bdc888ab0e965ad05e5bfbc63",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)3444",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:28"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:73"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:31"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)3056_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)3444": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "f652655bdc7e46d5fbbdfe554eb0121a6c38f1b2eb12654ebd4502cb71f1fcaf": {
      "address": "0x69BE67cbd3020E13c773a1B8ef0fE5Dd14ABC9F8",
      "txHash": "0x28b3adff87466a5b083c027ff2cafdaf4329464fa3b5630c33bdcca0aec418c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)4670",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "Dispatch",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)3544",
            "src": "contracts/components/dispatch/Dispatch.sol:13"
          },
          {
            "contract": "Dispatch",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)4726",
            "src": "contracts/components/dispatch/Dispatch.sol:14"
          },
          {
            "contract": "Dispatch",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)3213_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "contract": "Dispatch",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)3213_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:17"
          },
          {
            "contract": "Dispatch",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/dispatch/Dispatch.sol:82"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)3544": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)4726": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)3213_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)3213_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)4670": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ab24030a8b58d9c91a94eb0b1631ab5c3e17c78aa7397a1b04a660af98496fbd": {
      "address": "0x5271a60c81B232abf3909B1150747Fdf7b88e15E",
      "txHash": "0x8d4342eb107e5e476827a40d05590fd803d2c5c8114f21befd25510837c2bcf5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)12938",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "Dispatch",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)11615",
            "src": "contracts/components/dispatch/Dispatch.sol:13"
          },
          {
            "contract": "Dispatch",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)13138",
            "src": "contracts/components/dispatch/Dispatch.sol:14"
          },
          {
            "contract": "Dispatch",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11017_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "contract": "Dispatch",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11017_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:17"
          },
          {
            "contract": "Dispatch",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/dispatch/Dispatch.sol:89"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)11615": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)13138": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)11017_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)11017_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10559_storage"
              }
            ]
          },
          "t_struct(Set)10559_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)12938": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1170a6643e8e9345d78ad63f1698fad5b438b38497ff822551d725c4e0d89449": {
      "address": "0x85a7e6Ae79f08a274887BA8a5C56E90B3141e8E5",
      "txHash": "0x520864d4e12b0906b24e54096cdf8400f9515297cf8320e1cf8d2968dce2a295",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)4837",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "Dispatch",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)3544",
            "src": "contracts/components/dispatch/Dispatch.sol:13"
          },
          {
            "contract": "Dispatch",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)4893",
            "src": "contracts/components/dispatch/Dispatch.sol:14"
          },
          {
            "contract": "Dispatch",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)3213_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "contract": "Dispatch",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)3213_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:17"
          },
          {
            "contract": "Dispatch",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/dispatch/Dispatch.sol:111"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)3544": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)4893": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)3213_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)3213_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)4837": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d688d70035645191719bb471a13fabc9204dffd3042634a42642a748c780a9bc": {
      "address": "0x35114341a8BdD015D4D00aEe1848F0c723464359",
      "txHash": "0x5d398f966bcfa7057e83457591e31b1a0b97c0303ceeb73ea0eb77a5c1b72bdf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13188",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "Dispatch",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)11615",
            "src": "contracts/components/dispatch/Dispatch.sol:13"
          },
          {
            "contract": "Dispatch",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)13445",
            "src": "contracts/components/dispatch/Dispatch.sol:14"
          },
          {
            "contract": "Dispatch",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11017_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "contract": "Dispatch",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11017_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:17"
          },
          {
            "contract": "Dispatch",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/dispatch/Dispatch.sol:130"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)11615": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)13445": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)11017_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)11017_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10559_storage"
              }
            ]
          },
          "t_struct(Set)10559_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)13188": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "52f9cb720b4360bf40a19b55a7a7acc213458f40e11a6cff57d5fcf9716bbf25": {
      "address": "0xa9226b8dd56f63aC34b27a50C0fa11526949314a",
      "txHash": "0x354cef886bc2d76a7982ab0599c624b9c4028397506972134afb8f13e6c6bd44",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13183",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:70"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)10418_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:67"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)12341_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)11017_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11017_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:41"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)11017_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10559_storage"
              }
            ]
          },
          "t_struct(Set)10559_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)11017_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)12341_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)12341_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)10418_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)10418_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)13183": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "53c66d7b2214a14379223a0d88543516681779be95920ad2cfbd711b4cfdf69e": {
      "address": "0x805d11CBeC3a2aECC5587E2BdE45fc51Aecc80C1",
      "txHash": "0x444d1681f738fd2fa250698f775878d1c3e997f25c2b7c4608379015c38bf07e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)3449",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:28"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:73"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:31"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)3056_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)3449": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "1523802d8eb5bed4d6f9d59fa4023924f472aa25f1bcf0a386f1018288830944": {
      "address": "0x23E2d32C9A4E1ca246081462D96466c24526c2E3",
      "txHash": "0x90dd3af979a65168728c1937d92cdb36b1350ae0f6f5e0e1724492a0af5889cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)3449",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:50"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:73"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)4137_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:11"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:25"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)4137_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)4137_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)3056_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)3449": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "b801151c92d081656712ab787476e804768f3e1945fa851b6927a074104132b0": {
      "address": "0x1183BaB469958db277B12862e607c78b84C05EAd",
      "txHash": "0x9a83d9efc4ee07ee0e94b0e8b2a3a1f19f4f42228b22a9fd9aa8ed4e166e03f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13188",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:70"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)10418_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:67"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)12346_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)11017_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11017_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:41"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)11017_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10559_storage"
              }
            ]
          },
          "t_struct(Set)10559_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)11017_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)12346_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)12346_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)10418_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)10418_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)13188": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "79f5d1b5b5612c9c60ea4768da8f0813bd76cebfa8a6ce504228b4d8fa0348aa": {
      "address": "0xF07AbbEC1A5F448D9b8867C34E55E4737EA7a186",
      "txHash": "0xb14f4f21acbbfdb92f310a09f628aa612610baeba2330daa943552e005041f0e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)3449",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:50"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:73"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)4142_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:11"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:25"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)4142_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)4142_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)3056_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)3449": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "b7749cf8448d42efd9f30b38130138b58da77fa15f515a04256fedd6eaba94b6": {
      "address": "0xf1C1C19C0FEa2E93d5FbEB0addDE9083b9377198",
      "txHash": "0x1451997e386cb15d59909d895b811c686fa3d0a36c2bdfdded3ad7420d1e053d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2254",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)3449",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:50"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2614_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:73"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)4144_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:11"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:25"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)4144_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)4144_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2614_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2614_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3056_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)3056_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2755_storage"
              }
            ]
          },
          "t_struct(Set)2755_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)3449": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2254": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "4e33942d0765df21341f822bb2f7d688be58c264a4324ec2d7e565e0b10e3114": {
      "address": "0xFcF92c4BDe79845812D3Fe62D832e57222Be774D",
      "txHash": "0x0057ca8f65e86b8de4187122b2006934a671e5956ced84c77f04d9471eb14cbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/access/AccessManager.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "45c22dfc4491e321d110e933318a15262888b6f425e550188e5966280dd7465b": {
      "address": "0xe3518c8c3e782166332157C88Caf70a86eDfDbb6",
      "txHash": "0x9d2d5b8b94206981f8a8b7a098ab18c1739f8a52fe6fe8697e8760f3642e99ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13612",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:78"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)10511_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:67"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)12562_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)11110_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11110_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:49"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)11110_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10652_storage"
              }
            ]
          },
          "t_struct(Set)10652_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)11110_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)12562_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)12562_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)10511_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)10511_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)13612": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "3b1663095ee0f76590f20ea9aee0931ad85ad5071902f9294e96524c8906b87c": {
      "address": "0x106387C32Aa3B2732B9fc92719F5b4BcCd733F55",
      "txHash": "0x9025a9dd7af2d2ee33df858fc330b72ff6329bab71c6b1a6a882d78d7666a8fc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13612",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:58"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)10953_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)10511_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:19"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:73"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)14578_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:11"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:25"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:45"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)14578_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)14578_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)10511_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)10511_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)10953_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)10953_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10652_storage"
              }
            ]
          },
          "t_struct(Set)10652_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)13612": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "c0a97186e8ed95d2b898f2d1e0cf304aa0d8232c1b114d73ced5f0539078dee1": {
      "address": "0x8da8Cd7119D39150bD4a4ec3A6B462e8dB167Ee3",
      "txHash": "0xe3af286d47f858a8f5f57e883371117bfa9b2cb7e0eb73e2032344b4d3d814bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13612",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "Dispatch",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)11805",
            "src": "contracts/components/dispatch/Dispatch.sol:13"
          },
          {
            "contract": "Dispatch",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)13934",
            "src": "contracts/components/dispatch/Dispatch.sol:14"
          },
          {
            "contract": "Dispatch",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11110_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "contract": "Dispatch",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)11110_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:17"
          },
          {
            "contract": "Dispatch",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/dispatch/Dispatch.sol:129"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)11805": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)13934": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)11110_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)11110_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10652_storage"
              }
            ]
          },
          "t_struct(Set)10652_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)13612": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4020ee8b4a474c8a53c4c5e7793567a4c3a351ae62529e88f2e4f4c643bc5546": {
      "address": "0xbCfED42eE5C8964718aEC708F9e2476f19684391",
      "txHash": "0x5c696a31c7f101cbfb682efeaa351803725af63fd243c8c022ead2c55483e2d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)6928",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)13612",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "Alerts",
            "label": "scannerRegistry",
            "type": "t_contract(ScannerRegistry)13934",
            "src": "contracts/components/alerts/Alerts.sol:8"
          },
          {
            "contract": "Alerts",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/alerts/Alerts.sol:76"
          }
        ],
        "types": {
          "t_contract(ScannerRegistry)13934": {
            "label": "contract ScannerRegistry"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)13612": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)6928": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ee910d4f5a97ea32e6b08ca446ca3fcef2485001d24dd0ee7ff511c02dbc9719": {
      "address": "0x3B1AFaC06887DDE99fE53762803CaFa7b911dB25",
      "txHash": "0x898d56cfed8ecdfb289ce5f78c2de8229a26980c9664b3f34facf7c3e242c5b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)986",
            "src": "contracts/components/utils/AccessManaged.sol:10"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:36"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Router",
            "label": "_routingTable",
            "type": "t_mapping(t_bytes4,t_struct(AddressSet)1650_storage)",
            "src": "contracts/components/router/Router.sol:17"
          },
          {
            "contract": "Router",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/router/Router.sol:67"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(AddressSet)1650_storage)": {
            "label": "mapping(bytes4 => struct EnumerableSet.AddressSet)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(AddressSet)1650_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1349_storage"
              }
            ]
          },
          "t_struct(Set)1349_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IAccessControl)986": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "953a5a5e96997c6abe9e981ceda8e51e12900d2bd67bdcf5fb84b9ca61ca8f29": {
      "address": "0xe5C7EF5d02D6e9b98ACb8277d91fC2eA8598D035",
      "txHash": "0xc2a5bf9d031f50bf60c5e0d68f27cc6f5163f19cfde6d6b02a839ec71b2ae15e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/access/AccessManager.sol:43"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)5123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "77041553bfdf55a0e1d3974ed12e9d4786c5f3a7d36f6e881d148f07c700567b": {
      "address": "0x11532e679178C8E81425e97FA1E972b91dcFc746",
      "txHash": "0x35afdb178d91dcac04c00bf4f734408555460190a9215fdae706c0c187541eea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Router",
            "label": "_routingTable",
            "type": "t_mapping(t_bytes4,t_struct(AddressSet)16033_storage)",
            "src": "contracts/components/router/Router.sol:17"
          },
          {
            "contract": "Router",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/router/Router.sol:67"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(AddressSet)16033_storage)": {
            "label": "mapping(bytes4 => struct EnumerableSet.AddressSet)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(AddressSet)16033_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)15732_storage"
              }
            ]
          },
          "t_struct(Set)15732_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5725891ff7d3c580e8b6baa8eccab75f80069f8e270734f74ce4ffc40df05acb": {
      "address": "0x933d2335C7d946d129e855c103E1136D6bFC0b3D",
      "txHash": "0x2ff0325f0d53cc2fd54d1dc0172502e6d1d2fb22c8e645a888bd4bb2e3ad5720",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18691",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:78"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)15591_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:17"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:69"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)17623_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)16190_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)16190_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:49"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)16190_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)15732_storage"
              }
            ]
          },
          "t_struct(Set)15732_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)16190_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)17623_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)17623_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)15591_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)15591_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)18691": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "f9208365ef4b93e5f3e87b2021d8e1a8d2ba6739ea16af0e61378f128d799aad": {
      "address": "0x7f0E1365A2B28E7A30B4A886D430e9bAF34E3e1C",
      "txHash": "0xa7f3022d06011eab0550bac71b9a4b105a9427af55401aad61d5b0cd10b56e3a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:35"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:86"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2492",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2059"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2085"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)2421",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2089"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2110"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1800"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2216"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2272"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:731"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1013"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1016"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1019"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1022"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1025"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1028"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1407"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2593"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)685_storage)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2599"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2632"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)978_storage)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2646"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2700"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)5491_storage)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2708"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2722"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2759"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)5491_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)5491_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)978_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)978_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)685_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)685_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)384_storage"
              }
            ]
          },
          "t_struct(Set)384_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)2421": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2492": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "1ac1601099733281d751509d78638f21e3a5f8e76626f474fda532a184e6e4a5": {
      "address": "0x30Ff0F269023859676084C26C25E6b9Eb95EBad4",
      "txHash": "0x112deded1ab896ac4c14202247eeb3c2b99b1f5d5f558489ae926880acb527a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:35"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:86"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2492",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2059"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2085"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)2421",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2089"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2110"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:1800"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2216"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2272"
          },
          {
            "contract": "Dispatch_0_1_0",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)4919",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2766"
          },
          {
            "contract": "Dispatch_0_1_0",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)5640",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2767"
          },
          {
            "contract": "Dispatch_0_1_0",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)842_storage)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2769"
          },
          {
            "contract": "Dispatch_0_1_0",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)842_storage)",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2770"
          },
          {
            "contract": "Dispatch_0_1_0",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/_old/dispatch/Dispatch_0_1_0.sol:2882"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)4919": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)5640": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)842_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)842_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)384_storage"
              }
            ]
          },
          "t_struct(Set)384_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)2421": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)2492": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7ebb000a0b3763b022ff48fbb93311f7747b7c31fc42ad6eee352bda33e0cd92": {
      "address": "0xb47844DdbbB997478b30040A8A0F5136E1af3Cf4",
      "txHash": "0x9b94e74d0d851a49970eb0b6bd9102c91834179fe50e5b60a00d96d91a2690e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12008",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18691",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "Alerts",
            "label": "scannerRegistry",
            "type": "t_contract(ScannerRegistry)19013",
            "src": "contracts/components/alerts/Alerts.sol:8"
          },
          {
            "contract": "Alerts",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/alerts/Alerts.sol:76"
          }
        ],
        "types": {
          "t_contract(ScannerRegistry)19013": {
            "label": "contract ScannerRegistry"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)18691": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12008": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "63998b483724d6e1275c803d17e6275b53c1351261b5e1f653686f1928e93418": {
      "address": "0x7E028e488E13045E435d4FC8Cd46aA9753B626Aa",
      "txHash": "0xfa81ef6a750d43e038e52625500c8dc6e28e012a3791ebc68a85792a907f5b53",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "VestingWallet",
            "label": "_released",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vesting/VestingWallet.sol:14"
          },
          {
            "contract": "VestingWallet",
            "label": "_beneficiary",
            "type": "t_address",
            "src": "contracts/vesting/VestingWallet.sol:15"
          },
          {
            "contract": "VestingWallet",
            "label": "_start",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWallet.sol:16"
          },
          {
            "contract": "VestingWallet",
            "label": "_cliff",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWallet.sol:17"
          },
          {
            "contract": "VestingWallet",
            "label": "_duration",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWallet.sol:18"
          },
          {
            "contract": "VestingWalletV2",
            "label": "_historicalBalanceBridged",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vesting/VestingWalletV2.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "298b3c8847b3d11b59e92ae40b9634f79f24a823204b7ede87fea3c457fa0bb1": {
      "address": "0x6A434647A4a3De2F915Bb49B6227444EBbE67Aed",
      "txHash": "0x0f653e11a875e9259cca4d3a5fa66f56b7e3c06ece6f17c6217ee3b2c9aebf93",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)10527_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)8316_storage)dyn_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)8316_storage)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:263"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)8316_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)8316_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)8316_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)10527_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)10527_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3ce56db770779a7387bda37503d6dceee1e74ec39b1e045ab1f56a0d25cef568": {
      "address": "0x2441Ce5eB269505f30F6F434D21E039438aaC342",
      "txHash": "0x1aa5e003626709afb8026cc581dc452f60a0363beb474ff2443cea5a21c5b427",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12009",
            "src": "contracts/components/utils/AccessManaged.sol:9"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:35"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)18976",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponent",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponent.sol:45"
          },
          {
            "contract": "ScannerNodeVersion",
            "label": "scannerNodeVersion",
            "type": "t_string_storage",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:17"
          },
          {
            "contract": "ScannerNodeVersion",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:43"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)18976": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12009": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1f23ad0483afed54eeb39846a0dad5ef1c0299632fabc5518f2c977c5dc7a6ba": {
      "address": "0x4cf374988bDb78Ba81D59f915612D7D74ef93380",
      "txHash": "0x7087649cb5428e25f891b5da9cc00727806e068954beb550c49366d7e864b15c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19439",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:83"
          },
          {
            "contract": "StakeAwareUpgradeable",
            "label": "_stakeController",
            "type": "t_contract(IStakeController)22382",
            "src": "contracts/components/utils/StakeAware.sol:10"
          },
          {
            "contract": "StakeAwareUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts/components/utils/StakeAware.sol:40"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)16430_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:18"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:89"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)18548_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)17029_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)17029_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:50"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)17029_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage"
              }
            ]
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)17029_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)18548_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)18548_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)16430_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)16430_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IStakeController)22382": {
            "label": "contract IStakeController"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)19439": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "d12d999b2bb6dca1d19e270e50d166424433e62098c4973197cfd8378d4877a8": {
      "address": "0xfED0d6639653C1533BD55F7E196C6B0AA38647EF",
      "txHash": "0xb6768b07c02fcb7edf89ac4f23b0174ebb93fa6c3dae3b55ffcc8d3f1763e9af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19439",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "Dispatch",
            "label": "_agents",
            "type": "t_contract(AgentRegistry)17747",
            "src": "contracts/components/dispatch/Dispatch.sol:13"
          },
          {
            "contract": "Dispatch",
            "label": "_scanners",
            "type": "t_contract(ScannerRegistry)19878",
            "src": "contracts/components/dispatch/Dispatch.sol:14"
          },
          {
            "contract": "Dispatch",
            "label": "scannerToAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)17029_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:18"
          },
          {
            "contract": "Dispatch",
            "label": "agentToScanners",
            "type": "t_mapping(t_uint256,t_struct(UintSet)17029_storage)",
            "src": "contracts/components/dispatch/Dispatch.sol:19"
          },
          {
            "contract": "Dispatch",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/dispatch/Dispatch.sol:131"
          }
        ],
        "types": {
          "t_contract(AgentRegistry)17747": {
            "label": "contract AgentRegistry"
          },
          "t_contract(ScannerRegistry)19878": {
            "label": "contract ScannerRegistry"
          },
          "t_mapping(t_uint256,t_struct(UintSet)17029_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)17029_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage"
              }
            ]
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)19439": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1b25332f3d1ffcb3e8b9a61765e06481812d0c2408a8dbbb9dffc9c18bd76986": {
      "address": "0x6fFf4F9AB6f0A3B64f444E0c9Ff74999b772ba9c",
      "txHash": "0x3db1be37d1305364377bfdb3e836c87f47ea34230b3209b5da9c303144c1aaf1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19439",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:62"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)16872_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "StakeAwareUpgradeable",
            "label": "_stakeController",
            "type": "t_contract(IStakeController)22382",
            "src": "contracts/components/utils/StakeAware.sol:10"
          },
          {
            "contract": "StakeAwareUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts/components/utils/StakeAware.sol:40"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)16430_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:20"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:101"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)20547_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:11"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:25"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:50"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)20547_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)20547_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)16430_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)16430_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakeController)22382": {
            "label": "contract IStakeController"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)16872_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)16872_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage"
              }
            ]
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IRouter)19439": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "e540d538822dc01612c0f9aea38aa25ef8d3dd74ca89b501bec233dc8bd4d452": {
      "address": "0x7691a7505666fCe7d3512Fd2ec5d731c6CB6C399",
      "txHash": "0x102949882f0568481b708ccef992e9691e5e0ce877cd9c6cd75643a9a4794f02",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19439",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:75"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)16872_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "StakeAwareUpgradeable",
            "label": "_stakeController",
            "type": "t_contract(IStakeController)22479",
            "src": "contracts/components/utils/StakeAware.sol:10"
          },
          {
            "contract": "StakeAwareUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts/components/utils/StakeAware.sol:40"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)16430_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:20"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:101"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)20634_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:12"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:27"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:57"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)20634_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)20634_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)16430_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)16430_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakeController)22479": {
            "label": "contract IStakeController"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)16872_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)16872_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage"
              }
            ]
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IRouter)19439": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "a9adafaf0167077b8c56d16163097084fb41de3831589e4b1db10257f7ef5c21": {
      "address": "0xBe9209E216Bc22b375b87267f009d75286d56B4A",
      "txHash": "0x1888e3253c44327e062cbc8396dfdac91edd5180f6365c4cc4a8eeade60c1bdb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19525",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "contract": "FortaStaking",
            "label": "stakedToken",
            "type": "t_contract(IERC20)13115",
            "src": "contracts/components/staking/FortaStaking.sol:51"
          },
          {
            "contract": "FortaStaking",
            "label": "_activeStake",
            "type": "t_struct(Balances)24076_storage",
            "src": "contracts/components/staking/FortaStaking.sol:54"
          },
          {
            "contract": "FortaStaking",
            "label": "_inactiveStake",
            "type": "t_struct(Balances)24076_storage",
            "src": "contracts/components/staking/FortaStaking.sol:56"
          },
          {
            "contract": "FortaStaking",
            "label": "_lockingDelay",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)14872_storage))",
            "src": "contracts/components/staking/FortaStaking.sol:60"
          },
          {
            "contract": "FortaStaking",
            "label": "_rewards",
            "type": "t_struct(Balances)24076_storage",
            "src": "contracts/components/staking/FortaStaking.sol:63"
          },
          {
            "contract": "FortaStaking",
            "label": "_released",
            "type": "t_mapping(t_uint256,t_struct(SignedBalances)24190_storage)",
            "src": "contracts/components/staking/FortaStaking.sol:65"
          },
          {
            "contract": "FortaStaking",
            "label": "_frozen",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/components/staking/FortaStaking.sol:68"
          },
          {
            "contract": "FortaStaking",
            "label": "_withdrawalDelay",
            "type": "t_uint64",
            "src": "contracts/components/staking/FortaStaking.sol:71"
          },
          {
            "contract": "FortaStaking",
            "label": "_treasury",
            "type": "t_address",
            "src": "contracts/components/staking/FortaStaking.sol:74"
          },
          {
            "contract": "FortaStaking",
            "label": "_stakingParameters",
            "type": "t_contract(IStakeController)22975",
            "src": "contracts/components/staking/FortaStaking.sol:76"
          },
          {
            "contract": "FortaStaking",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "contracts/components/staking/FortaStaking.sol:542"
          }
        ],
        "types": {
          "t_contract(IERC20)13115": {
            "label": "contract IERC20"
          },
          "t_struct(Balances)24076_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)14872_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Timers.Timestamp))"
          },
          "t_mapping(t_address,t_struct(Timestamp)14872_storage)": {
            "label": "mapping(address => struct Timers.Timestamp)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Timestamp)14872_storage": {
            "label": "struct Timers.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_struct(SignedBalances)24190_storage)": {
            "label": "mapping(uint256 => struct Distributions.SignedBalances)"
          },
          "t_struct(SignedBalances)24190_storage": {
            "label": "struct Distributions.SignedBalances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_int256)"
              },
              {
                "label": "_totalSupply",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStakeController)22975": {
            "label": "contract IStakeController"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)19525": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "a77e03b681d3cc08a007d64d7bfdea573be76f7cfab394a3d7a8bfa5567e8731": {
      "address": "0xAf25E71E0464dF9A8a204f4ec517A685E216F4c8",
      "txHash": "0xee10dc98f419a289bceef0f3c3be29a1a82f20c1fa2df5a964972abbb631f0c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19525",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "FortaStakingParameters",
            "label": "_fortaStaking",
            "type": "t_contract(FortaStaking)22593",
            "src": "contracts/components/staking/FortaStakingParameters.sol:11"
          },
          {
            "contract": "FortaStakingParameters",
            "label": "_stakeSubjectHandlers",
            "type": "t_mapping(t_uint8,t_contract(IStakeSubject)22996)",
            "src": "contracts/components/staking/FortaStakingParameters.sol:13"
          }
        ],
        "types": {
          "t_contract(FortaStaking)22593": {
            "label": "contract FortaStaking"
          },
          "t_mapping(t_uint8,t_contract(IStakeSubject)22996)": {
            "label": "mapping(uint8 => contract IStakeSubject)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IStakeSubject)22996": {
            "label": "contract IStakeSubject"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IRouter)19525": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6874eb015a5fe324b526283dbc667fb52b7a23fa44ae3a750469fd8e009fc136": {
      "address": "0xD03720Ab043f8feeC2ED35C36695bBe63ed863f1",
      "txHash": "0x5ef24f419f75aa774447c1f5ad5a8aeb074870c4bf1d8a79b548fad48ee2566d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19525",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "FrontRunningProtection",
            "label": "_commits",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/tools/FrontRunningProtection.sol:5"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "AgentRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/components/agents/AgentRegistryCore.sol:83"
          },
          {
            "contract": "StakeSubjectUpgradeable",
            "label": "_stakeController",
            "type": "t_contract(IStakeController)22975",
            "src": "contracts/components/staking/StakeSubject.sol:10"
          },
          {
            "contract": "StakeSubjectUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts/components/staking/StakeSubject.sol:40"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)16430_storage)",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:18"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "_stakeThreshold",
            "type": "t_struct(StakeThreshold)22980_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:19"
          },
          {
            "contract": "AgentRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:123"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadata",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)18634_storage)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:13"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "_agentMetadataUniqueness",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:14"
          },
          {
            "contract": "AgentRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:37"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_allAgents",
            "type": "t_struct(UintSet)17029_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:10"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "_chainAgents",
            "type": "t_mapping(t_uint256,t_struct(UintSet)17029_storage)",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:11"
          },
          {
            "contract": "AgentRegistryEnumerable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:54"
          },
          {
            "contract": "AgentRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/agents/AgentRegistry.sol:50"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(UintSet)17029_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage"
              }
            ]
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)17029_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)18634_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)"
          },
          "t_struct(AgentMetadata)18634_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BitMap)16430_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)16430_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(StakeThreshold)22980_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256"
              },
              {
                "label": "max",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_contract(IStakeController)22975": {
            "label": "contract IStakeController"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IRouter)19525": {
            "label": "contract IRouter"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "9b362efbdbdd0fa1f8122777ea9e093f56840760f46d5c1709898914c4944429": {
      "address": "0x250f240185237170b2D0c0C8Ab1ac45d93085d2f",
      "txHash": "0x55df8c12a5496535375936978812212ef1773e797d4dbc6d7cf6934f6bc6a0d6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19525",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:75"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)16872_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:44"
          },
          {
            "contract": "StakeSubjectUpgradeable",
            "label": "_stakeController",
            "type": "t_contract(IStakeController)22975",
            "src": "contracts/components/staking/StakeSubject.sol:10"
          },
          {
            "contract": "StakeSubjectUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts/components/staking/StakeSubject.sol:40"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)16430_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:20"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_stakeThresholds",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)22980_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:21"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:115"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)20837_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:12"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:26"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:79"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)20837_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)20837_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)16430_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)16430_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)22980_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)"
          },
          "t_struct(StakeThreshold)22980_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256"
              },
              {
                "label": "max",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_contract(IStakeController)22975": {
            "label": "contract IStakeController"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)16872_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)16872_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage"
              }
            ]
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IRouter)19525": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "f823bc7fab1777288cf6ee728cab46720ea5bcc889bd22e4e0e3b73f5553cae1": {
      "address": "0xd966E90265b0345D9112cB836183C992E5E3B52C",
      "txHash": "0x614062f2f448bd8edd7cfc39cab783aab60b7083a0b73b955681d3463e129d9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)12211",
            "src": "contracts/components/utils/AccessManaged.sol:13"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:41"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)19525",
            "src": "contracts/components/utils/Routed.sol:8"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:29"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:46"
          },
          {
            "contract": "ScannerNodeVersion",
            "label": "scannerNodeVersion",
            "type": "t_string_storage",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:17"
          },
          {
            "contract": "ScannerNodeVersion",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:45"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IRouter)19525": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3a8c928fb074c4d758e41d5f47f21bebe01bdbb57dcab095322a9606991cf7f9": {
      "address": "0xc6db6560413308DbC857CFC332efA94D5752D094",
      "txHash": "0xd1a97b185623ccdd6dc5d45ab1b244420ef6131d5e21d92cc2e652db43f1c3c9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)180_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)2974_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1785_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)1785_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:263"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "whitelistDisabled",
            "offset": 0,
            "slot": "454",
            "type": "t_bool",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Forta",
            "src": "contracts/token/Forta.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1785_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1785_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2974_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)180_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1785_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2974_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)180_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "2dece5c65df54220004360c47021b0c33a5a34f41ec8a406bb5a3f7d63c8cb8b": {
      "address": "0xf9c302bc3FeF3e3d1f7256b3656F2a0534c1c76A",
      "txHash": "0xc5f54d69993f2b365957204e1b289028c528909d7373d1b8027b8badb6fdb3e7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)180_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:112"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)2974_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:94"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1785_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)1785_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:263"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "whitelistDisabled",
            "offset": 0,
            "slot": "454",
            "type": "t_bool",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:77"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Forta",
            "src": "contracts/token/Forta.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Checkpoint)1785_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1785_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Counter)2974_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)180_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Checkpoint)1785_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_struct(Counter)2974_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RoleData)180_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    },
    "7bc7bd7d9279b3de0dfda26ac5f0beac00427e5fe7b797fb69967e662323d9c0": {
      "address": "0x78FC73157aB73dA75946C9BcD8ec39e68F63d3b9",
      "txHash": "0x00c7713f19d7825909a410f342f538819f61c64a08a029dc92894a68efa3db7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "AccessManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/access/AccessManager.sol:73"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)5123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1a9730a6392579afc0339a436ca98a40e5ed8c0ee3bca99611b0d0e5660e2341": {
      "address": "0x9A97d4f5f4711c2d629DA4D8Be072700eF15cb3e",
      "txHash": "0xc86e241dbf5c33b627754621613814f147ef71f791245ce8dca893505db65692",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "_accessControl",
            "type": "t_contract(IAccessControl)2608",
            "src": "contracts/components/utils/AccessManaged.sol:14"
          },
          {
            "contract": "AccessManagedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/AccessManaged.sol:60"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "_router",
            "type": "t_contract(IRouter)5773",
            "src": "contracts/components/utils/Routed.sol:9"
          },
          {
            "contract": "RoutedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/utils/Routed.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "BaseComponentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/BaseComponentUpgradeable.sol:56"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "StakeSubjectUpgradeable",
            "label": "_stakeController",
            "type": "t_contract(IStakeController)7026",
            "src": "contracts/components/staking/StakeSubject.sol:11"
          },
          {
            "contract": "StakeSubjectUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts/components/staking/StakeSubject.sol:53"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "_stakeThresholds",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)7035_storage)",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:15"
          },
          {
            "contract": "ScannerRegistryCore",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:188"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "_managers",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3410_storage)",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:11"
          },
          {
            "contract": "ScannerRegistryManaged",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:72"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "_disabled",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2968_storage)",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:24"
          },
          {
            "contract": "ScannerRegistryEnable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:150"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "_scannerMetadata",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)6861_storage)",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:12"
          },
          {
            "contract": "ScannerRegistryMetadata",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:63"
          },
          {
            "contract": "ScannerRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/components/scanners/ScannerRegistry.sol:101"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)6861_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)"
          },
          "t_struct(ScannerMetadata)6861_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "metadata",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2968_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)"
          },
          "t_struct(BitMap)2968_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3410_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)3410_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3109_storage"
              }
            ]
          },
          "t_struct(Set)3109_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)7035_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)"
          },
          "t_struct(StakeThreshold)7035_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256"
              },
              {
                "label": "max",
                "type": "t_uint256"
              },
              {
                "label": "activated",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_contract(IStakeController)7026": {
            "label": "contract IStakeController"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IRouter)5773": {
            "label": "contract IRouter"
          },
          "t_contract(IAccessControl)2608": {
            "label": "contract IAccessControl"
          }
        }
      }
    },
    "27e4127e87d240df48c0b0fbbee79ff5ff6561ab5626682181fac9846db744c0": {
      "address": "0xFB8Baf07368B4C171156afEf9E4Ff6d055fB8C69",
      "txHash": "0x1e7f2259603cb8625db8deb47fc577215d3e0621e9e18954cfe81bf2e7093355",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_released",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vesting/VestingWalletV1.sol:16"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_beneficiary",
            "type": "t_address",
            "src": "contracts/vesting/VestingWalletV1.sol:17"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_start",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_cliff",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_duration",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "contract": "VestingWalletV1",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV1.sol:135"
          },
          {
            "contract": "VestingWalletV2",
            "label": "historicalBalanceMin",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV2.sol:30"
          },
          {
            "contract": "VestingWalletV2",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV2.sol:140"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0bf323b457910ba5ae661aa7314c06fda418fadc1e4803b300faa1b2926cceb8": {
      "address": "0x63D235a8CfAe1897b1B37cf98EaE44e47E06C443",
      "txHash": "0x8c50ccf9660eb6b26df88d6b36b8f8191791740aceb8dd3fe8a1aba4ecc2ca90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_released",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vesting/VestingWalletV1.sol:16"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_beneficiary",
            "type": "t_address",
            "src": "contracts/vesting/VestingWalletV1.sol:17"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_start",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_cliff",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_duration",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "contract": "VestingWalletV1",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV1.sol:135"
          },
          {
            "contract": "VestingWalletV2",
            "label": "historicalBalanceMin",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV2.sol:30"
          },
          {
            "contract": "VestingWalletV2",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV2.sol:140"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "68c823afe3b726fb049e9886f50076e2203fd2fba8087449b753a760b8aa0193": {
      "address": "0x51Db59AE184BCb6B2DF9909e865E489361f88f2e",
      "txHash": "0x26abfc2638916f4aab111cc14eed7f2664f05fb81e7ba1f9d0244eb51778adc3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_released",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vesting/VestingWalletV1.sol:16"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_beneficiary",
            "type": "t_address",
            "src": "contracts/vesting/VestingWalletV1.sol:17"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_start",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_cliff",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_duration",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "contract": "VestingWalletV1",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV1.sol:135"
          },
          {
            "contract": "VestingWalletV2",
            "label": "historicalBalanceMin",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV2.sol:30"
          },
          {
            "contract": "VestingWalletV2",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV2.sol:140"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "be4f2d039cc12860cf6b64f3ac9f38b08c0bd067a198204375e7ac9664aa493e": {
      "address": "0x133CF241668649AF87f8902154933239c3220711",
      "txHash": "0x3953ab623d1f632464d399b8ae6d5c01994eb74723710b02ca8cd0acbb38fd98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_released",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vesting/VestingWalletV1.sol:16"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_beneficiary",
            "type": "t_address",
            "src": "contracts/vesting/VestingWalletV1.sol:17"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_start",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_cliff",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "contract": "VestingWalletV1",
            "label": "_duration",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "contract": "VestingWalletV1",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV1.sol:135"
          },
          {
            "contract": "VestingWalletV2",
            "label": "historicalBalanceMin",
            "type": "t_uint256",
            "src": "contracts/vesting/VestingWalletV2.sol:30"
          },
          {
            "contract": "VestingWalletV2",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts/vesting/VestingWalletV2.sol:140"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9a4867c968cb9097325d0512a4ec77cce20e4b50e43f9793646a28684895c413": {
      "address": "0x711C75D1571498808b6B396a7dDE31d892fFf1D1",
      "txHash": "0x90950c63940346c4b941aa939d2f4a0bb78ad8fe4a1d56adb079ee055a0f746a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:16"
          },
          {
            "label": "_beneficiary",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:17"
          },
          {
            "label": "_start",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "label": "_cliff",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "label": "_duration",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:135"
          },
          {
            "label": "historicalBalanceMin",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:139"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "420d0ccc50967c6d07088114a8c43fec7e843b1c8d57965e89e1415b38fce2d8": {
      "address": "0x36905C04a5f6D3b94c81Be06499F235c98e2b05B",
      "txHash": "0xa4e141f8d3cf0237b93dc8a9dc01c28cb1b6a1e34e4c2f9126e8aa41cf4430ba",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:16"
          },
          {
            "label": "_beneficiary",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:17"
          },
          {
            "label": "_start",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "label": "_cliff",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "label": "_duration",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:135"
          },
          {
            "label": "historicalBalanceMin",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:139"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "71243b5a64b066eccbb19c7212e616cf6af7df97a33d749fba470723fc54eeb9": {
      "address": "0x4d2B4948fa734AdB0082D00693573D3a7E6A9B72",
      "txHash": "0x9467481986279a4c7ec960b1b44172ae9c12c396fe9eb2706080a6d80b677d02",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:16"
          },
          {
            "label": "_beneficiary",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:17"
          },
          {
            "label": "_start",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "label": "_cliff",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "label": "_duration",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:135"
          },
          {
            "label": "historicalBalanceMin",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:139"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "69f4ac4b2febfe0423e53e112f679c037e2fd518c3032ef8daee20133eccdab9": {
      "address": "0xD11A9Cf4Fc9D150d0Bf982D37Bc41F5c1F9C6073",
      "txHash": "0x99be4195f44dcd40667e018d21221f2716aaf6eb8212cbf473ce06232963f5cc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:18"
          },
          {
            "label": "_beneficiary",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:19"
          },
          {
            "label": "_start",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:20"
          },
          {
            "label": "_cliff",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:21"
          },
          {
            "label": "_duration",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV1",
            "src": "contracts/vesting/VestingWalletV1.sol:137"
          },
          {
            "label": "historicalBalanceMin",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)45_storage",
            "contract": "VestingWalletV2",
            "src": "contracts/vesting/VestingWalletV2.sol:140"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e2123480fa298c8dba27f3c4ead1bcf2adedd58367a4feb627fa8d5930a884dd": {
      "address": "0x7b7C1fE536c3B86a3B9ee64481D706a21E882963",
      "txHash": "0xada1a47eae90173b46ff261e557074d4f9cb401e2a65d3ddeedad82e423fbf63",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)180_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AccessManager",
            "src": "contracts/components/access/AccessManager.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)180_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)180_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "108c8f3586e64b6214928573f578cf62a5d4f4efbf8edd269c9806fa76f4d42c": {
      "address": "0xda9D0e1c11cFB18b880c883AEAFb30fa629571F7",
      "txHash": "0x35387712026c6dec41f893db04d759fd60826e79939a5cd8c2bf4cb3e7f3bc70",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)12211",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)19638",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "_commits",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "FrontRunningProtection",
            "src": "contracts/tools/FrontRunningProtection.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "label": "_stakeController",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IStakeController)23396",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)4_storage",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:55"
          },
          {
            "label": "_stakeThreshold",
            "offset": 0,
            "slot": "407",
            "type": "t_struct(StakeThreshold)23405_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:19"
          },
          {
            "label": "frontRunningDelay",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)41_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:191"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_struct(BitMap)16430_storage)",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:150"
          },
          {
            "label": "_agentMetadata",
            "offset": 0,
            "slot": "502",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)18584_storage)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:15"
          },
          {
            "label": "_agentMetadataUniqueness",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:62"
          },
          {
            "label": "_allAgents",
            "offset": 0,
            "slot": "552",
            "type": "t_struct(UintSet)17029_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:12"
          },
          {
            "label": "_chainAgents",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(UintSet)17029_storage)",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "555",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AgentRegistry",
            "src": "contracts/components/agents/AgentRegistry.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)19638": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeController)23396": {
            "label": "contract IStakeController",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)18584_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)16430_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)17029_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AgentMetadata)18584_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(BitMap)16430_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)23405_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UintSet)17029_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ee4e7b87695437592be9e6401292d4105304d0ca579db3d2f4979b5acf97eceb": {
      "address": "0x2A8BfAFf920afE27D412ffF359579D3E207B9228",
      "txHash": "0x876da296c310ac0ba880d20186086a14ce1ead0a9fe905396e4284ac5ea0019b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)12211",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)19638",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "_agents",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(AgentRegistry)17632",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:15"
          },
          {
            "label": "_scanners",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(ScannerRegistry)20190",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "label": "scannerToAgents",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(UintSet)17029_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:20"
          },
          {
            "label": "agentToScanners",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(UintSet)17029_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:251"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AgentRegistry)17632": {
            "label": "contract AgentRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)19638": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerRegistry)20190": {
            "label": "contract ScannerRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)17029_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)17029_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e66d0623c86b45c3190c087f2f847ff3892fa6ef4e87b0b149dcca703c9534e9": {
      "address": "0x6b399F1D270a1D3f19678EF64E0bF21af586F58f",
      "txHash": "0x26b72fec17d1fc6ddf08355e5f8ff8fc7627ee0931c77033f4af325f3e05cf6f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)12211",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "_routingTable",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes4,t_struct(AddressSet)16872_storage)",
            "contract": "Router",
            "src": "contracts/components/router/Router.sol:21"
          },
          {
            "label": "_revertsOnFail",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "Router",
            "src": "contracts/components/router/Router.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Router",
            "src": "contracts/components/router/Router.sol:107"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_struct(AddressSet)16872_storage)": {
            "label": "mapping(bytes4 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)16872_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16571_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)16571_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b7904d7cccae5079289dc9d32667ec273ed69075012546796cca14cbc0c24ba4": {
      "address": "0x25659bF32D6745954AC08735b87A03C323c80eCC",
      "txHash": "0x3e5f507af12189e800d44835a8f125be0234d9eab3383d2673579a94202069a5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)2608",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)5773",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "label": "_stakeController",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IStakeController)7026",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)4_storage",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:55"
          },
          {
            "label": "_stakeThresholds",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)7035_storage)",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:190"
          },
          {
            "label": "_managers",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)3410_storage)",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:74"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_uint256,t_struct(BitMap)2968_storage)",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:152"
          },
          {
            "label": "_scannerMetadata",
            "offset": 0,
            "slot": "551",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)6861_storage)",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:65"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "601",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)2608": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)5773": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeController)7026": {
            "label": "contract IStakeController",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)3410_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)2968_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)6861_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)7035_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3410_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3109_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)2968_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ScannerMetadata)6861_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3109_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)7035_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "3aef0f9be0ce9bc8b9eb2d5595f9cdefa87b922886d9b412a4618206df0c04a8": {
      "address": "0x7C93443acCA1Af99312E5422fA6902fe5aa17962",
      "txHash": "0x2154ea2105d2ce8aa01453aa2c75eedfba6a4d6553fe4bdb87154b0dba8c701e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)12211",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)19638",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "scannerNodeVersion",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:58"
          }
        ],
        "types": {
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)19638": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "20ea20d3d0f2c86736487b8051fc97825ab52dbf8bec58a98278f688dd8cb011": {
      "address": "0xeFe7DbF9f35d0a0579CFd8df57f4226B86930286",
      "txHash": "0x34843afd9469f0316d1d7818193241b90f98e8d7a85b9cf3d4acf02968517973",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)12211",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)19638",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:67"
          },
          {
            "label": "stakedToken",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IERC20)13115",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:60"
          },
          {
            "label": "_activeStake",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Balances)24706_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:63"
          },
          {
            "label": "_inactiveStake",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Balances)24706_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:65"
          },
          {
            "label": "_lockingDelay",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)14872_storage))",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:69"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(Balances)24706_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:72"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_uint256,t_struct(SignedBalances)24820_storage)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:74"
          },
          {
            "label": "_frozen",
            "offset": 0,
            "slot": "460",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:77"
          },
          {
            "label": "_withdrawalDelay",
            "offset": 0,
            "slot": "461",
            "type": "t_uint64",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:80"
          },
          {
            "label": "_treasury",
            "offset": 8,
            "slot": "461",
            "type": "t_address",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:83"
          },
          {
            "label": "_stakingParameters",
            "offset": 0,
            "slot": "462",
            "type": "t_contract(IStakeController)23396",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:85"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)40_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:683"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)13115": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)19638": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeController)23396": {
            "label": "contract IStakeController",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Timestamp)14872_storage)": {
            "label": "mapping(address => struct Timers.Timestamp)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)14872_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Timers.Timestamp))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SignedBalances)24820_storage)": {
            "label": "mapping(uint256 => struct Distributions.SignedBalances)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Balances)24706_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SignedBalances)24820_storage": {
            "label": "struct Distributions.SignedBalances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_int256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Timestamp)14872_storage": {
            "label": "struct Timers.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "24c059f83231a92fd5f3a9b1f0d1848f215dc48d6b10ae82d2f6df7e5e368cee": {
      "address": "0x8aF8E5417D1c31047C45D9F28d17151471BBfc0b",
      "txHash": "0x2f27ad5512af9fe774e356a4bbd7ace9695420e32851e95dcba55b45c1aae2a0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)12211",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)19638",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "_fortaStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(FortaStaking)22970",
            "contract": "FortaStakingParameters",
            "src": "contracts/components/staking/FortaStakingParameters.sol:14"
          },
          {
            "label": "_stakeSubjectHandlers",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_contract(IStakeSubject)23421)",
            "contract": "FortaStakingParameters",
            "src": "contracts/components/staking/FortaStakingParameters.sol:16"
          }
        ],
        "types": {
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FortaStaking)22970": {
            "label": "contract FortaStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)12211": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)19638": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubject)23421": {
            "label": "contract IStakeSubject",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint8,t_contract(IStakeSubject)23421)": {
            "label": "mapping(uint8 => contract IStakeSubject)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9724e247a938067aff05d0a00f2578f80af224e5386734321d838bcda63bf990": {
      "address": "0x6DA9CFD9663973202F5897FA4d4707daeA474e12",
      "txHash": "0xe37f4c489d52b8649031d2101e3d76db09e680ba4ef61ab05a4292ddcf2a634f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)14517",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)24066",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "_machines",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_enum(State)30107)",
            "contract": "StateMachineController",
            "src": "contracts/components/utils/StateMachines.sol:51"
          },
          {
            "label": "_proposalIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)17021_storage",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:48"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(Proposal)28221_storage)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:49"
          },
          {
            "label": "deposits",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:50"
          },
          {
            "label": "penalties",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_struct(SlashPenalty)28207_storage)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:51"
          },
          {
            "label": "slashingExecutor",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(ISlashingExecutor)28028",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:52"
          },
          {
            "label": "stakingParameters",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(FortaStakingParameters)27860",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:53"
          },
          {
            "label": "depositAmount",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:54"
          },
          {
            "label": "slashPercentToProposer",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "SlashingController",
            "src": "contracts/components/staking/SlashingController.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FortaStakingParameters)27860": {
            "label": "contract FortaStakingParameters",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)14517": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)24066": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(ISlashingExecutor)28028": {
            "label": "contract ISlashingExecutor",
            "numberOfBytes": "20"
          },
          "t_enum(PenaltyMode)28201": {
            "label": "enum SlashingController.PenaltyMode",
            "members": [
              "UNDEFINED",
              "MIN_STAKE",
              "CURRENT_STAKE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(State)30107": {
            "label": "enum StateMachines.State",
            "members": [
              "_00",
              "_01",
              "_02",
              "_03",
              "_04",
              "_05",
              "_06",
              "_07",
              "_08",
              "_09",
              "_10",
              "_11",
              "_12",
              "_13",
              "_14",
              "_15"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(SlashPenalty)28207_storage)": {
            "label": "mapping(bytes32 => struct SlashingController.SlashPenalty)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(State)30107)": {
            "label": "mapping(uint256 => enum StateMachines.State)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Proposal)28221_storage)": {
            "label": "mapping(uint256 => struct SlashingController.Proposal)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)17021_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)28221_storage": {
            "label": "struct SlashingController.Proposal",
            "members": [
              {
                "label": "subjectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "penaltyId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subjectType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(SlashPenalty)28207_storage": {
            "label": "struct SlashingController.SlashPenalty",
            "members": [
              {
                "label": "percentSlashed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mode",
                "type": "t_enum(PenaltyMode)28201",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a91bc590faafcca1ba4e2b426666b2dec8a5b395388d5be6a1bdb9778e2026e0": {
      "address": "0xb7381eE0208BFE04AdF398BBFDcb54adE4051E62",
      "txHash": "0x8c9ac504a2ccc77b935ace1479300e90d2e3c702eb1ef3491a5e24925fc91f47",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)14517",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)24066",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "scannerNodeVersion",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:20"
          },
          {
            "label": "scannerNodeBetaVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:80"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)14517": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)24066": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "53d7e06cb170dfa69d948ddf322e661b902a2a36d02b5000c6f321364f8cd851": {
      "address": "0x330d7D95FA0bC652363b3Ff3E05ABa42581b9252",
      "txHash": "0x77d1bec228f259eb7d59e5ad60985bb0d3216aef65a88bf0b54bb7a14cbe407f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)14517",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)24066",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "_commits",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "FrontRunningProtection",
            "src": "contracts/tools/FrontRunningProtection.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_stakeController",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IStakeController)28096",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)4_storage",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:55"
          },
          {
            "label": "_stakeThreshold",
            "offset": 0,
            "slot": "407",
            "type": "t_struct(StakeThreshold)28105_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:19"
          },
          {
            "label": "frontRunningDelay",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)41_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:191"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_struct(BitMap)20826_storage)",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:150"
          },
          {
            "label": "_agentMetadata",
            "offset": 0,
            "slot": "502",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)23004_storage)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:15"
          },
          {
            "label": "_agentMetadataUniqueness",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:62"
          },
          {
            "label": "_allAgents",
            "offset": 0,
            "slot": "552",
            "type": "t_struct(UintSet)21425_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:12"
          },
          {
            "label": "_chainAgents",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(UintSet)21425_storage)",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "555",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AgentRegistry",
            "src": "contracts/components/agents/AgentRegistry.sol:113"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)14517": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)24066": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeController)28096": {
            "label": "contract IStakeController",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)23004_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)20826_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)21425_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AgentMetadata)23004_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(BitMap)20826_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)20967_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28105_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UintSet)21425_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)20967_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f9a87dd2a4fe1e62dfcde274fa7898e0d5bc6206787d2bc8d2149153fa77160a": {
      "address": "0x0425723AFf5Ea0ba97F331606AbEDc72119ebc95",
      "txHash": "0x7b1a3925ef4fdd6fa080cab9f939794df35871a6a5b9458d6ef314dc0ec05d85",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)14517",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)24066",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_stakeController",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IStakeController)28096",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)4_storage",
            "contract": "StakeSubjectUpgradeable",
            "src": "contracts/components/staking/StakeSubject.sol:55"
          },
          {
            "label": "_stakeThresholds",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)28105_storage)",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:191"
          },
          {
            "label": "_managers",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)21268_storage)",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:74"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_uint256,t_struct(BitMap)20826_storage)",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:153"
          },
          {
            "label": "_scannerMetadata",
            "offset": 0,
            "slot": "551",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)25587_storage)",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:65"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "601",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:113"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)14517": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)24066": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeController)28096": {
            "label": "contract IStakeController",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)21268_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)20826_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)25587_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)28105_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)21268_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)20967_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)20826_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ScannerMetadata)25587_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)20967_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28105_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "499ef03d354c8811a9566e3a8f6d90182f64b182a37d301d343869050a8215fa": {
      "address": "0xeaB83B6006b9Bfb7dfdf14531AA7bdc8C6656967",
      "txHash": "0x26f4f8e0a5fb48b2f6b19b1999005a812a5df0b5d2ad22d1058248dd89c552bd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)14517",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)24066",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "_agents",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(AgentRegistry)22048",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:15"
          },
          {
            "label": "_scanners",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(ScannerRegistry)24669",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:16"
          },
          {
            "label": "scannerToAgents",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(UintSet)21425_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:20"
          },
          {
            "label": "agentToScanners",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(UintSet)21425_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:270"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AgentRegistry)22048": {
            "label": "contract AgentRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)14517": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)24066": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerRegistry)24669": {
            "label": "contract ScannerRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)21425_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)20967_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)21425_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)20967_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "abd2cbad0dae7de31b177d70dab3e327046f3c6089c53220c7cd256e8f4ec09e": {
      "address": "0x8C6C2c886A5D4e3eb2cA17B631621686719c84c5",
      "txHash": "0xb4a153db263ecbf9a80cdd3b3355e6c6f858a47252bd0d69d5b21104927ce6d7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)3088",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)6861",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "stakedToken",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IERC20)3172",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:65"
          },
          {
            "label": "_activeStake",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Balances)11469_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:68"
          },
          {
            "label": "_inactiveStake",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Balances)11469_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:70"
          },
          {
            "label": "_lockingDelay",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)3919_storage))",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:73"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(Balances)11469_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:76"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_uint256,t_struct(SignedBalances)11583_storage)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:78"
          },
          {
            "label": "_frozen",
            "offset": 0,
            "slot": "460",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:81"
          },
          {
            "label": "_withdrawalDelay",
            "offset": 0,
            "slot": "461",
            "type": "t_uint64",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:84"
          },
          {
            "label": "_treasury",
            "offset": 8,
            "slot": "461",
            "type": "t_address",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:87"
          },
          {
            "label": "_stakingParameters",
            "offset": 0,
            "slot": "462",
            "type": "t_contract(IStakeController)9259",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:92"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)40_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:742"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)3088": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3172": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)6861": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeController)9259": {
            "label": "contract IStakeController",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Timestamp)3919_storage)": {
            "label": "mapping(address => struct Timers.Timestamp)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)3919_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Timers.Timestamp))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SignedBalances)11583_storage)": {
            "label": "mapping(uint256 => struct Distributions.SignedBalances)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Balances)11469_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SignedBalances)11583_storage": {
            "label": "struct Distributions.SignedBalances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_int256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Timestamp)3919_storage": {
            "label": "struct Timers.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f2659edbd97a56e2bfa149be59d471ae54d922dec667e5c58f0103d4f5e45350": {
      "address": "0xebe253D8E585bc8cc3Cc1256dD43D4752bD49749",
      "txHash": "0xc1f51971f89c2675d8f4527d9d1504fce6fed5e89b891d5ab89a0fb6ed807d36",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)3088",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:62"
          },
          {
            "label": "_router",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IRouter)6861",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:58"
          },
          {
            "label": "_fortaStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(FortaStaking)8746",
            "contract": "FortaStakingParameters",
            "src": "contracts/components/staking/FortaStakingParameters.sol:9"
          },
          {
            "label": "_stakeSubjectHandlers",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_contract(IStakeSubject)9291)",
            "contract": "FortaStakingParameters",
            "src": "contracts/components/staking/FortaStakingParameters.sol:11"
          }
        ],
        "types": {
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FortaStaking)8746": {
            "label": "contract FortaStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)3088": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IRouter)6861": {
            "label": "contract IRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubject)9291": {
            "label": "contract IStakeSubject",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint8,t_contract(IStakeSubject)9291)": {
            "label": "mapping(uint8 => contract IStakeSubject)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
