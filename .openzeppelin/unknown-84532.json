{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2441Ce5eB269505f30F6F434D21E039438aaC342",
      "txHash": "0x6949c0a036db47121e42a12344736804e2ef106303cc1807d50507cb7fa1c0b8",
      "kind": "uups"
    },
    {
      "address": "0x67D4d0654D6Ba56d41a7A6Ec8f33430c3d778201",
      "txHash": "0xb958664ed417662bb76450b0d3c54cb1c1566dbd772e6f67746b7abc102a9288",
      "kind": "uups"
    },
    {
      "address": "0x34e023721dD940C7bDE591738C4FEa0aeEb24C61",
      "txHash": "0x4d23592f7ce0e80b4474f0eb9b4a1902b2726049ef9ab2e817c7fb61f65ae786",
      "kind": "uups"
    },
    {
      "address": "0x71076Bdb44Eb60E46e67AbC3d209FB5609dE9feC",
      "txHash": "0x117de56e6c444903de7f78ab069d74eadffa191821213cdde85dcb1f4a6c47d2",
      "kind": "uups"
    },
    {
      "address": "0x8E5Cc9C1003AF663f2609AC35F607a05464137b6",
      "txHash": "0xb043188abe6e1fba7d97cf34c10486553895de788a8cc0ee6f738f7845ca1840",
      "kind": "uups"
    },
    {
      "address": "0x8a5EEfA2BAb332DD7666d885e9C9d2775221EB1c",
      "txHash": "0x1053878ac463375cb82a8edcedcf96d58fcd76a62b06880c8e1d05be36d7b25b",
      "kind": "uups"
    },
    {
      "address": "0xA3701DA009A346B8A8Fe3b27e72500053B163215",
      "txHash": "0x3a0b392fb9762313f68ad3b09bd611e5ce66943d6047fbbdccd47bfec6a09815",
      "kind": "uups"
    },
    {
      "address": "0x17c1a0Ba9251429F0638F575111f17Dd436801ec",
      "txHash": "0xeb241d3d267a2a81639300fbb1bebc9faa2774b2e04ff9594a267b5f245882a4",
      "kind": "uups"
    },
    {
      "address": "0xa862CcbD51acFf3de6C6D4e46A62914E1B9D57F6",
      "txHash": "0xe52cab8e649f8143756d8771d9781c1b682347e6fa7cb2048cd47ec91636e691",
      "kind": "uups"
    },
    {
      "address": "0x988B794f73b78eae329DDFC1E07945C7FaE385f1",
      "txHash": "0x90e04b0766d2243886f27494b2d3d7252e0f2cb30baf0cec8bc9f881534ed126",
      "kind": "uups"
    },
    {
      "address": "0x5a8e8d955f6Ea8fB2C9Cb0E5Ec960D761dD4281e",
      "txHash": "0x32c790a51bd9e56dc215a3b3f840306696cbc9ff98fb37564bd1ad806a0bfc3c",
      "kind": "uups"
    },
    {
      "address": "0x2D317315A2788fE4B64333CE93297413c669CF92",
      "txHash": "0x15cc0e830263e9ced6d6173572caa27169ac7900c3c5523e61073a1e04d06afb",
      "kind": "uups"
    },
    {
      "address": "0x6EF4f70f695c2195BB42A9DE862fECeA641eb810",
      "txHash": "0x26d756c0343889a274314dc5c4b1d5c72ad35fc0520ccacf2734e394ee0ece8f",
      "kind": "uups"
    },
    {
      "address": "0x3063152eb36007dEbEA023Caa6725da166bB149c",
      "txHash": "0xcee0b5fa07eed6f650d7af0514270e91963e09a4164d1b0c2baaad864d6731cc",
      "kind": "uups"
    },
    {
      "address": "0x38C0F07ECA98b87757Fb76C56Be779b79C676062",
      "txHash": "0xf6446a6ac7040473a03f26133b97c2930ab0cd1c7367e633aee117a1187f0c9d",
      "kind": "uups"
    },
    {
      "address": "0x1ed86971E4C4f3d13b6b8030D80C7D609de7139c",
      "txHash": "0x1045fbf28a2848d54ae386bdc8aed626d5d5ca9e067a339a99c81f8aa76dafc2",
      "kind": "uups"
    },
    {
      "address": "0x7691a7505666fCe7d3512Fd2ec5d731c6CB6C399",
      "txHash": "0x549ac76cf3692ebfae8f17e01208ad6d4314f20a0a69b247ae44118cc9674827",
      "kind": "uups"
    },
    {
      "address": "0x414E8777Df3e3Af4Ed3e4bA9A2266779F86558e4",
      "txHash": "0x739d4bc84f76233dd043d8dcd68bca2dc3d4cfa7df298fd4d694a76caf3fe97d",
      "kind": "uups"
    },
    {
      "address": "0xc054a3DABfFEb0279E62669FB699a33D4cC5fC62",
      "txHash": "0x1504f78e212741feb80d52d6451cb4ada6c13a289d765960781379fb16989787",
      "kind": "uups"
    },
    {
      "address": "0xe6dc38CDb33459823B4f9D1c2d8FE569cA7A1ea5",
      "txHash": "0x85aae0fd6ad641c7b9f8531834b796192e937a16c3b63c90b21744f2a187cfbd",
      "kind": "uups"
    },
    {
      "address": "0x786e4446bB39F5480310FE98c48d2d5e6129A4cC",
      "txHash": "0xcdffc5c8918c6d57a9829098db3ba488c13b549953e766834a63ca9178cde534",
      "kind": "uups"
    },
    {
      "address": "0x0C8B8DeC21Aa72179e8C4703a9B55d9Db061D423",
      "txHash": "0x8746d6252dc2ef4d7809ad055cbcd9b14258971bb9047280f56e4d364c1669cc",
      "kind": "uups"
    },
    {
      "address": "0x452C7044B9977de45ed7621ba0Bb77E312663157",
      "txHash": "0x12f841a9c663b9133c34d612605e1b28bc16352a639edc8c0f1c16976a37fe65",
      "kind": "uups"
    },
    {
      "address": "0x58376C1982Da91B54d508335D9c9B43F1AC9E54D",
      "txHash": "0xedccdd0ee89d81b026d8179262b63635916027b8f11d4a9624702598c905ac6e",
      "kind": "uups"
    },
    {
      "address": "0x1Eca2C733AecaeB2c2E89F7fA526E00fB4A74eDe",
      "txHash": "0x372c7b155b65ba8852f5f0569713add78607869d53fa607318ba9eb8921cd2bd",
      "kind": "uups"
    }
  ],
  "impls": {
    "93ab8c600720dbfa3615341325db00fc435180c5e0caeb07ba04a83d59957b8f": {
      "address": "0x95d9a757ad9C25999ffE93f3067221F04ce1Cc79",
      "txHash": "0xb209a25603a48833948f8f1d8f652a2f4936ec2e306479b9bf3329ff5b0883d4",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)171_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AccessManager",
            "src": "contracts/components/access/AccessManager.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)171_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)171_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ba5452f42c3a4a4a469e2ef0aa7712fef3e1142a1bce8b2b8f281c70879d759a": {
      "address": "0xBeDC289BdE5BA0395CF84927CB3f82b1d2423283",
      "txHash": "0x0bf42e7d7013a87611da0f85b29b1c0858d6574155a17bdd0d00346a13656a7e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)171_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)3192_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)2024_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)2024_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "deprecated_whitelistDisabled",
            "offset": 0,
            "slot": "454",
            "type": "t_bool",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:27",
            "renamedFrom": "whitelistDisabled"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Forta",
            "src": "contracts/token/Forta.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2024_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)2024_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3192_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)171_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2024_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3192_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)171_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6de389afa374dbfc7dcb2864e696399638d51ca637d6b15ee7e7258012640157": {
      "address": "0xA1663c4002d3F166C5D90750ae1B7266167a0Ba4",
      "txHash": "0x18b3ef6391c7430a4d494b18281a5164cf7a030b7b5df1e8f51e9b6ab4105b8b",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "stakedToken",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IERC20)10164",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:60"
          },
          {
            "label": "_activeStake",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Balances)29795_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:63"
          },
          {
            "label": "_inactiveStake",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Balances)29795_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:65"
          },
          {
            "label": "_lockingDelay",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)10911_storage))",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:67"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(Balances)29795_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:70"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_uint256,t_struct(SignedBalances)29909_storage)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:72"
          },
          {
            "label": "_deprecated_frozen",
            "offset": 0,
            "slot": "460",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:75",
            "renamedFrom": "_frozen"
          },
          {
            "label": "_withdrawalDelay",
            "offset": 0,
            "slot": "461",
            "type": "t_uint64",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:76"
          },
          {
            "label": "_treasury",
            "offset": 8,
            "slot": "461",
            "type": "t_address",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:79"
          },
          {
            "label": "subjectGateway",
            "offset": 0,
            "slot": "462",
            "type": "t_contract(IStakeSubjectGateway)28279",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:82",
            "retypedFrom": "IStakeController",
            "renamedFrom": "_stakingParameters"
          },
          {
            "label": "slashDelegatorsPercent",
            "offset": 0,
            "slot": "463",
            "type": "t_uint256",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:84"
          },
          {
            "label": "allocator",
            "offset": 0,
            "slot": "464",
            "type": "t_contract(IStakeAllocator)23150",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:85"
          },
          {
            "label": "openProposals",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:86"
          },
          {
            "label": "_reentrancyStatus",
            "offset": 0,
            "slot": "466",
            "type": "t_uint256",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "467",
            "type": "t_array(t_uint256)36_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:714"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)36_storage": {
            "label": "uint256[36]",
            "numberOfBytes": "1152"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)10164": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeAllocator)23150": {
            "label": "contract IStakeAllocator",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)28279": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Timestamp)10911_storage)": {
            "label": "mapping(address => struct Timers.Timestamp)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)10911_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Timers.Timestamp))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SignedBalances)29909_storage)": {
            "label": "mapping(uint256 => struct Distributions.SignedBalances)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Balances)29795_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SignedBalances)29909_storage": {
            "label": "struct Distributions.SignedBalances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_int256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Timestamp)10911_storage": {
            "label": "struct Timers.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23286ee7b3f24b942170b022d74dae54c99da5103959dbd65d4e9fbaad45093c": {
      "address": "0x3D46F1CE3934b3c9D6790e74b89C65E44bf3b235",
      "txHash": "0x2cbf630160bd88d62f8ff837102a62388c171ad98a670fdb6590d8069babfd67",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_fortaStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(FortaStaking)22699",
            "contract": "StakeSubjectGateway",
            "src": "contracts/components/staking/stake_subjects/StakeSubjectGateway.sol:17"
          },
          {
            "label": "_stakeSubjects",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "StakeSubjectGateway",
            "src": "contracts/components/staking/stake_subjects/StakeSubjectGateway.sol:21",
            "retypedFrom": "mapping(uint8 => contract IStakeSubject)",
            "renamedFrom": "_stakeSubjectHandlers"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FortaStaking)22699": {
            "label": "contract FortaStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8d1e8156502988ade3b712c0cc9b7a3d83bb3c84755eb635342a8443ebe255ab": {
      "address": "0xd5e35048eA5d248E698b153e45a84dcE3Ab2D458",
      "txHash": "0x46409ece7faf37f6dee1328885837ca77ba03a7a340904313f9ce0adf8df7c91",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:36"
          },
          {
            "label": "_rewardsAccumulators",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(DelegatedAccRewards)24963_storage)",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:38"
          },
          {
            "label": "rewardsPerEpoch",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:40"
          },
          {
            "label": "rewardedEpochs",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:42"
          },
          {
            "label": "claimedRewardsPerEpoch",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:44"
          },
          {
            "label": "delegationFees",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_array(t_struct(DelegationFee)24995_storage)2_storage)",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:51"
          },
          {
            "label": "delegationParamsEpochDelay",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:53"
          },
          {
            "label": "defaultFeeBps",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(DelegationFee)24995_storage)2_storage": {
            "label": "struct RewardsDistributor.DelegationFee[2]",
            "numberOfBytes": "64"
          },
          "t_array(t_struct(EpochCheckpoint)24376_storage)dyn_storage": {
            "label": "struct Accumulators.EpochCheckpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Accumulator)24381_storage)": {
            "label": "mapping(address => struct Accumulators.Accumulator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(DelegationFee)24995_storage)2_storage)": {
            "label": "mapping(uint256 => struct RewardsDistributor.DelegationFee[2])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DelegatedAccRewards)24963_storage)": {
            "label": "mapping(uint256 => struct RewardsDistributor.DelegatedAccRewards)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Accumulator)24381_storage": {
            "label": "struct Accumulators.Accumulator",
            "members": [
              {
                "label": "checkpoints",
                "type": "t_array(t_struct(EpochCheckpoint)24376_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DelegatedAccRewards)24963_storage": {
            "label": "struct RewardsDistributor.DelegatedAccRewards",
            "members": [
              {
                "label": "delegated",
                "type": "t_struct(Accumulator)24381_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delegators",
                "type": "t_struct(Accumulator)24381_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "delegatorsTotal",
                "type": "t_struct(Accumulator)24381_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "delegatorsPortions",
                "type": "t_mapping(t_address,t_struct(Accumulator)24381_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(DelegationFee)24995_storage": {
            "label": "struct RewardsDistributor.DelegationFee",
            "members": [
              {
                "label": "feeBps",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sinceEpoch",
                "type": "t_uint240",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EpochCheckpoint)24376_storage": {
            "label": "struct Accumulators.EpochCheckpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rate",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint240": {
            "label": "uint240",
            "numberOfBytes": "30"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "198300534cd98a26407831c366de5745134248dc58d4dacec268bcec4d0e9021": {
      "address": "0xE1205BEf00dc86043A54FB1b44e99A46f6060Fd4",
      "txHash": "0x882c9414e8e3258c774e47fadfdb300c9b27186736097dbfe917713feab65642",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_allocatedStake",
            "offset": 0,
            "slot": "301",
            "type": "t_struct(Balances)29795_storage",
            "contract": "StakeAllocator",
            "src": "contracts/components/staking/allocation/StakeAllocator.sol:37"
          },
          {
            "label": "_unallocatedStake",
            "offset": 0,
            "slot": "303",
            "type": "t_struct(Balances)29795_storage",
            "contract": "StakeAllocator",
            "src": "contracts/components/staking/allocation/StakeAllocator.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Balances)29795_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7fe3240ab39ee0f6ab1d364e1ca577521975abab7d5082b4e88050fb98ffef8f": {
      "address": "0xc68e5AA85a2cee7B0439bBc3e2324fA67812bFD4",
      "txHash": "0xa437b56fa4e166e9287f3517fe47ac5bc5b5ced595120aad3b1bd387ff664b82",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_subjectGateway",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IStakeSubjectGateway)28279",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:16",
            "retypedFrom": "IStakeController",
            "renamedFrom": "_stakeController"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)4_storage",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:64"
          },
          {
            "label": "_stakeThresholds",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:119"
          },
          {
            "label": "_managers",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:65"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_uint256,t_struct(BitMap)13720_storage)",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:124"
          },
          {
            "label": "_scannerMetadata",
            "offset": 0,
            "slot": "551",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)20117_storage)",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:59"
          },
          {
            "label": "optingOutOfMigration",
            "offset": 0,
            "slot": "601",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:18"
          },
          {
            "label": "sunsettingTime",
            "offset": 0,
            "slot": "602",
            "type": "t_uint256",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:19"
          },
          {
            "label": "scannerPoolRegistry",
            "offset": 0,
            "slot": "603",
            "type": "t_contract(ScannerPoolRegistry)17134",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "604",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:242"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)28279": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerPoolRegistry)17134": {
            "label": "contract ScannerPoolRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)13720_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)20117_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)14162_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)13720_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ScannerMetadata)20117_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28146_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "98ede370c4530d41947e5b70790d095e0216a64cae59542be4e42947fcd1ce23": {
      "address": "0x1bf8973A38ce1cD3d8cFE1E2F34cd721caf2f25E",
      "txHash": "0x509215da03469a7ba0f4ea611e079535531462a3ce5a97679aa31093b74ea0d6",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_subjectGateway",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IStakeSubjectGateway)28279",
            "contract": "DelegatedStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DelegatedStakeSubject.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)4_storage",
            "contract": "DelegatedStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DelegatedStakeSubject.sol:51"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "456",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "457",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_scannerPoolIdCounter",
            "offset": 0,
            "slot": "508",
            "type": "t_struct(Counter)6248_storage",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:44"
          },
          {
            "label": "_scannerNodes",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_address,t_struct(ScannerNode)17176_storage)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:46"
          },
          {
            "label": "_scannerNodeOwnership",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:48"
          },
          {
            "label": "_enabledScanners",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:50"
          },
          {
            "label": "_scannerStakeThresholds",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:52"
          },
          {
            "label": "_scannerPoolChainId",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:54"
          },
          {
            "label": "registrationDelay",
            "offset": 0,
            "slot": "514",
            "type": "t_uint256",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)38_storage",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:569"
          },
          {
            "label": "_managers",
            "offset": 0,
            "slot": "553",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)",
            "contract": "ScannerPoolRegistryManaged",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryManaged.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "554",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerPoolRegistryManaged",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryManaged.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ScannerPoolRegistry",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistry.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)28279": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ScannerNode)17176_storage)": {
            "label": "mapping(address => struct ScannerPoolRegistryCore.ScannerNode)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)14162_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)6248_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ScannerNode)17176_storage": {
            "label": "struct ScannerPoolRegistryCore.ScannerNode",
            "members": [
              {
                "label": "registered",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "disabled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "scannerPoolId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28146_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a1cfb539a88a371a59a24298002371e6053c5f66076b3e307d6886187b9d9fce": {
      "address": "0x6D30A5bcA7b2c02Dd05720DCfF34A1603c4B4546",
      "txHash": "0x13241ec112267704534fbbbee60923740a2d6cdf36f01601669b4322d0dda61b",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_commits",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "FrontRunningProtection",
            "src": "contracts/tools/FrontRunningProtection.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_subjectGateway",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IStakeSubjectGateway)28279",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:16",
            "retypedFrom": "IStakeController",
            "renamedFrom": "_stakeController"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)4_storage",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:64"
          },
          {
            "label": "_stakeThreshold",
            "offset": 0,
            "slot": "407",
            "type": "t_struct(StakeThreshold)28146_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:14"
          },
          {
            "label": "frontRunningDelay",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)41_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:199"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_struct(BitMap)13720_storage)",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:157"
          },
          {
            "label": "_agentMetadata",
            "offset": 0,
            "slot": "502",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)15948_storage)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:15"
          },
          {
            "label": "_agentMetadataUniqueness",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:69"
          },
          {
            "label": "_allAgents",
            "offset": 0,
            "slot": "552",
            "type": "t_struct(UintSet)14319_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:12"
          },
          {
            "label": "_chainAgents",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(UintSet)14319_storage)",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "555",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AgentRegistry",
            "src": "contracts/components/agents/AgentRegistry.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)28279": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)15948_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)13720_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)14319_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AgentMetadata)15948_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(BitMap)13720_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28146_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UintSet)14319_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "631bc445f15e2d5746541d05b39a4993a3ca2cfdba3cb6b5fcaf8d56492e6702": {
      "address": "0xf1fa4ea73ab7468B85D6e6863218BCCBC31eB589",
      "txHash": "0xb1e61af152a2f090862b4038351eecffe2148e85f7d37af12ee8676088671537",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_agents",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(AgentRegistry)14973",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:18"
          },
          {
            "label": "_scanners_deprecated",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(ScannerRegistry)19466",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:20",
            "renamedFrom": "_scanners"
          },
          {
            "label": "scannerToAgents",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(UintSet)14319_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:21"
          },
          {
            "label": "agentToScanners",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(UintSet)14319_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:22"
          },
          {
            "label": "_scannerPools",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(ScannerPoolRegistry)17134",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)47_storage",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:345"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AgentRegistry)14973": {
            "label": "contract AgentRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerPoolRegistry)17134": {
            "label": "contract ScannerPoolRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerRegistry)19466": {
            "label": "contract ScannerRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)14319_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)14319_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6be4e524bf41c1fbd77d463223b69986395c19a5ddafb2f9bcfddcbb85a88662": {
      "address": "0x5c5eA992BCA469eB3Bb69187831CE77e4280FD75",
      "txHash": "0xfe226086a6b3ee95c62bbd6aa566ff6c78abb023434fe1109b5529e73fd148f4",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "scannerNodeVersion",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:19"
          },
          {
            "label": "scannerNodeBetaVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d149a430ac10034d92921f56c5f75a5ba6983bbd548d710ab99a78b323cfdd31": {
      "address": "0x0cF1f4D2D675c48dE6726A3b9A78eE9d3A8eB4cf",
      "txHash": "0xf73030a66527adc67fb1004df86401b2ca4f6c63e421e2650ccc4e7387d15493",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_machines",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_enum(State)29223)",
            "contract": "StateMachineController",
            "src": "contracts/components/utils/StateMachines.sol:51"
          },
          {
            "label": "_proposalIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)10782_storage",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:48"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(Proposal)26517_storage)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:49"
          },
          {
            "label": "deposits",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:50"
          },
          {
            "label": "penalties",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_struct(SlashPenalty)26503_storage)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:51"
          },
          {
            "label": "slashingExecutor",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(ISlashingExecutor)26424",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:52"
          },
          {
            "label": "subjectGateway",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(StakeSubjectGateway)28895",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:54",
            "renamedFrom": "stakingParameters"
          },
          {
            "label": "depositAmount",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:55"
          },
          {
            "label": "slashPercentToProposer",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(ISlashingExecutor)26424": {
            "label": "contract ISlashingExecutor",
            "numberOfBytes": "20"
          },
          "t_contract(StakeSubjectGateway)28895": {
            "label": "contract StakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_enum(PenaltyMode)26497": {
            "label": "enum SlashingController.PenaltyMode",
            "members": [
              "UNDEFINED",
              "MIN_STAKE",
              "CURRENT_STAKE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(State)29223": {
            "label": "enum StateMachines.State",
            "members": [
              "_00",
              "_01",
              "_02",
              "_03",
              "_04",
              "_05",
              "_06",
              "_07",
              "_08",
              "_09",
              "_10",
              "_11",
              "_12",
              "_13",
              "_14",
              "_15"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(SlashPenalty)26503_storage)": {
            "label": "mapping(bytes32 => struct SlashingController.SlashPenalty)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(State)29223)": {
            "label": "mapping(uint256 => enum StateMachines.State)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Proposal)26517_storage)": {
            "label": "mapping(uint256 => struct SlashingController.Proposal)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)10782_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)26517_storage": {
            "label": "struct SlashingController.Proposal",
            "members": [
              {
                "label": "subjectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "penaltyId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subjectType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(SlashPenalty)26503_storage": {
            "label": "struct SlashingController.SlashPenalty",
            "members": [
              {
                "label": "percentSlashed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mode",
                "type": "t_enum(PenaltyMode)26497",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b9d307e032471177b6fcaf345770b84b88d13d1fcb89ad684a3bad52520e79c7": {
      "address": "0xbA7C75E0Ef1c93ea9Dd9c8858b39D932cE5C8a33",
      "txHash": "0x98ca6114e0d2db95058fde7730ad52c3604217a5a2c9076c5fa554e63e47b483",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_migratedScannerPools",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ScannerToScannerPoolMigration",
            "src": "contracts/components/scanners/ScannerToNodeRunnerMigration.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerToScannerPoolMigration",
            "src": "contracts/components/scanners/ScannerToNodeRunnerMigration.sol:182"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eb83e783fa0e85bb66e9b437f8a5e21276920c04cb02bc9e336aaab4be60f29d": {
      "address": "0xbEC4ADBEFc7B9B2BC1277F77B3dFa9a20C72297d",
      "txHash": "0x9b1fc2bf8c3f2531f51521e5a30de1b3f8f2951f3b6bf753055f624de7e940bb",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)171_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AccessManager",
            "src": "contracts/components/access/AccessManager.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)171_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)171_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "90080d3f1bdc1cbc2faf9256e7b1514552565dfc6ec472ca0fc3bd4b451142fe": {
      "address": "0xfED0d6639653C1533BD55F7E196C6B0AA38647EF",
      "txHash": "0x45840c560efd0775f6e83a7bf8d5d74ba7ce144b890dc43e8aa6f65d50586a05",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)171_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)4792_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)3624_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)3624_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "deprecated_whitelistDisabled",
            "offset": 0,
            "slot": "454",
            "type": "t_bool",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:27",
            "renamedFrom": "whitelistDisabled"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)49_storage",
            "contract": "FortaCommon",
            "src": "contracts/token/FortaCommon.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)49_storage",
            "contract": "FortaBridgedPolygon",
            "src": "contracts/token/FortaBridgedPolygon.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)3624_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)3624_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4792_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)171_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)3624_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4792_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)171_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2db7c66538ecd2436f678ebcfc2b8ca8553a5f59aedccaa0703d05bc52d6f298": {
      "address": "0xC6fE33F0BAd197fE65673Eff0D4e959e277fb401",
      "txHash": "0xd12e462a88ebfe1af9f567a85d1f51397a6719c7ccdc1ad331e806e6c3b7fb00",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)8389",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "stakedToken",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IERC20)8628",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:60"
          },
          {
            "label": "_activeStake",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Balances)15570_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:63"
          },
          {
            "label": "_inactiveStake",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Balances)15570_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:65"
          },
          {
            "label": "_lockingDelay",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)9301_storage))",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:67"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "457",
            "type": "t_struct(Balances)15570_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:70"
          },
          {
            "label": "_released",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_uint256,t_struct(SignedBalances)15684_storage)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:72"
          },
          {
            "label": "_deprecated_frozen",
            "offset": 0,
            "slot": "460",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:75",
            "renamedFrom": "_frozen"
          },
          {
            "label": "_withdrawalDelay",
            "offset": 0,
            "slot": "461",
            "type": "t_uint64",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:76"
          },
          {
            "label": "_treasury",
            "offset": 8,
            "slot": "461",
            "type": "t_address",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:79"
          },
          {
            "label": "subjectGateway",
            "offset": 0,
            "slot": "462",
            "type": "t_contract(IStakeSubjectGateway)14948",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:82",
            "retypedFrom": "IStakeController",
            "renamedFrom": "_stakingParameters"
          },
          {
            "label": "slashDelegatorsPercent",
            "offset": 0,
            "slot": "463",
            "type": "t_uint256",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:84"
          },
          {
            "label": "allocator",
            "offset": 0,
            "slot": "464",
            "type": "t_contract(IStakeAllocator)14757",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:85"
          },
          {
            "label": "openProposals",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:86"
          },
          {
            "label": "_reentrancyStatus",
            "offset": 0,
            "slot": "466",
            "type": "t_uint256",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "467",
            "type": "t_array(t_uint256)36_storage",
            "contract": "FortaStaking",
            "src": "contracts/components/staking/FortaStaking.sol:714"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)36_storage": {
            "label": "uint256[36]",
            "numberOfBytes": "1152"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)8389": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)8628": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeAllocator)14757": {
            "label": "contract IStakeAllocator",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)14948": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Timestamp)9301_storage)": {
            "label": "mapping(address => struct Timers.Timestamp)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Timestamp)9301_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Timers.Timestamp))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SignedBalances)15684_storage)": {
            "label": "mapping(uint256 => struct Distributions.SignedBalances)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Balances)15570_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SignedBalances)15684_storage": {
            "label": "struct Distributions.SignedBalances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_int256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Timestamp)9301_storage": {
            "label": "struct Timers.Timestamp",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "928d59ff813f40753046d9192bbf9da5fa6a28a2fede66cd45204c78398cb688": {
      "address": "0x98fb54aF7f508E83b35d81C65158bC8449128BB9",
      "txHash": "0x6db3c6141da96b1cbb91865d3790b965fe181c811ff540e92ebe8b32e2f12799",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_fortaStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(FortaStaking)22699",
            "contract": "StakeSubjectGateway",
            "src": "contracts/components/staking/stake_subjects/StakeSubjectGateway.sol:17"
          },
          {
            "label": "_stakeSubjects",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "StakeSubjectGateway",
            "src": "contracts/components/staking/stake_subjects/StakeSubjectGateway.sol:21",
            "retypedFrom": "mapping(uint8 => contract IStakeSubject)",
            "renamedFrom": "_stakeSubjectHandlers"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(FortaStaking)22699": {
            "label": "contract FortaStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6ae558f381823a525519c309399e41ba7b30a663953c2c7dcfdeb429be9d4f94": {
      "address": "0xFf5cc53879dB4924E0266c2Ec93C5b6204593684",
      "txHash": "0xb9d56f0f6634d9ccf78e2d9fbad9bae3f3abccb127f2c64aaeda6f684310bc9c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:36"
          },
          {
            "label": "_rewardsAccumulators",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(DelegatedAccRewards)24963_storage)",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:38"
          },
          {
            "label": "rewardsPerEpoch",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:40"
          },
          {
            "label": "rewardedEpochs",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:42"
          },
          {
            "label": "claimedRewardsPerEpoch",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:44"
          },
          {
            "label": "delegationFees",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_array(t_struct(DelegationFee)24995_storage)2_storage)",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:51"
          },
          {
            "label": "delegationParamsEpochDelay",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:53"
          },
          {
            "label": "defaultFeeBps",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "RewardsDistributor",
            "src": "contracts/components/staking/rewards/RewardsDistributor.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(DelegationFee)24995_storage)2_storage": {
            "label": "struct RewardsDistributor.DelegationFee[2]",
            "numberOfBytes": "64"
          },
          "t_array(t_struct(EpochCheckpoint)24376_storage)dyn_storage": {
            "label": "struct Accumulators.EpochCheckpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Accumulator)24381_storage)": {
            "label": "mapping(address => struct Accumulators.Accumulator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(DelegationFee)24995_storage)2_storage)": {
            "label": "mapping(uint256 => struct RewardsDistributor.DelegationFee[2])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(DelegatedAccRewards)24963_storage)": {
            "label": "mapping(uint256 => struct RewardsDistributor.DelegatedAccRewards)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Accumulator)24381_storage": {
            "label": "struct Accumulators.Accumulator",
            "members": [
              {
                "label": "checkpoints",
                "type": "t_array(t_struct(EpochCheckpoint)24376_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DelegatedAccRewards)24963_storage": {
            "label": "struct RewardsDistributor.DelegatedAccRewards",
            "members": [
              {
                "label": "delegated",
                "type": "t_struct(Accumulator)24381_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delegators",
                "type": "t_struct(Accumulator)24381_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "delegatorsTotal",
                "type": "t_struct(Accumulator)24381_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "delegatorsPortions",
                "type": "t_mapping(t_address,t_struct(Accumulator)24381_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(DelegationFee)24995_storage": {
            "label": "struct RewardsDistributor.DelegationFee",
            "members": [
              {
                "label": "feeBps",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sinceEpoch",
                "type": "t_uint240",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EpochCheckpoint)24376_storage": {
            "label": "struct Accumulators.EpochCheckpoint",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rate",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint240": {
            "label": "uint240",
            "numberOfBytes": "30"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d4bef10b2dc7c6a43f858043f9aa0998fedd148dfd8968724678dc7a4c44dfde": {
      "address": "0xBe9209E216Bc22b375b87267f009d75286d56B4A",
      "txHash": "0xbcdc32e97d2eb3094c2d6365598a199c615d6e5579b5871eee49fd1b8ca43dc2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_allocatedStake",
            "offset": 0,
            "slot": "301",
            "type": "t_struct(Balances)29795_storage",
            "contract": "StakeAllocator",
            "src": "contracts/components/staking/allocation/StakeAllocator.sol:37"
          },
          {
            "label": "_unallocatedStake",
            "offset": 0,
            "slot": "303",
            "type": "t_struct(Balances)29795_storage",
            "contract": "StakeAllocator",
            "src": "contracts/components/staking/allocation/StakeAllocator.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Balances)29795_storage": {
            "label": "struct Distributions.Balances",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e483fb4575fac0407d545669a4929d4d0a1ecb7631c5ca7831135ca9ce3f426": {
      "address": "0xAf25E71E0464dF9A8a204f4ec517A685E216F4c8",
      "txHash": "0xb27b517356f0da9fd84f7f667de43faac8fb04673c43707931b34704af10a27e",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_subjectGateway",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IStakeSubjectGateway)28279",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:16",
            "retypedFrom": "IStakeController",
            "renamedFrom": "_stakeController"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)4_storage",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:64"
          },
          {
            "label": "_stakeThresholds",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ScannerRegistryCore",
            "src": "contracts/components/scanners/ScannerRegistryCore.sol:119"
          },
          {
            "label": "_managers",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryManaged",
            "src": "contracts/components/scanners/ScannerRegistryManaged.sol:65"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_uint256,t_struct(BitMap)13720_storage)",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryEnable",
            "src": "contracts/components/scanners/ScannerRegistryEnable.sol:124"
          },
          {
            "label": "_scannerMetadata",
            "offset": 0,
            "slot": "551",
            "type": "t_mapping(t_uint256,t_struct(ScannerMetadata)20117_storage)",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "552",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerRegistryMetadata",
            "src": "contracts/components/scanners/ScannerRegistryMetadata.sol:59"
          },
          {
            "label": "optingOutOfMigration",
            "offset": 0,
            "slot": "601",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:18"
          },
          {
            "label": "sunsettingTime",
            "offset": 0,
            "slot": "602",
            "type": "t_uint256",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:19"
          },
          {
            "label": "scannerPoolRegistry",
            "offset": 0,
            "slot": "603",
            "type": "t_contract(ScannerPoolRegistry)17134",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "604",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ScannerRegistry",
            "src": "contracts/components/scanners/ScannerRegistry.sol:242"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)28279": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerPoolRegistry)17134": {
            "label": "contract ScannerPoolRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)13720_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ScannerMetadata)20117_storage)": {
            "label": "mapping(uint256 => struct ScannerRegistryMetadata.ScannerMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)14162_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)13720_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ScannerMetadata)20117_storage": {
            "label": "struct ScannerRegistryMetadata.ScannerMetadata",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28146_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "151d23a914070208e082dc533f60827299b785b655ce9e0d7d195a32480c0917": {
      "address": "0xd3BF0042aEDcB9d41cdaaC647249Bf1c7102f764",
      "txHash": "0x1f92a76e84a09f94a65b7d5ac282812f530d7fc2648a740af74c9220f401d6b2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_subjectGateway",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IStakeSubjectGateway)28279",
            "contract": "DelegatedStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DelegatedStakeSubject.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)4_storage",
            "contract": "DelegatedStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DelegatedStakeSubject.sol:51"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "456",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "457",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_scannerPoolIdCounter",
            "offset": 0,
            "slot": "508",
            "type": "t_struct(Counter)6248_storage",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:44"
          },
          {
            "label": "_scannerNodes",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_address,t_struct(ScannerNode)17176_storage)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:46"
          },
          {
            "label": "_scannerNodeOwnership",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:48"
          },
          {
            "label": "_enabledScanners",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:50"
          },
          {
            "label": "_scannerStakeThresholds",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:52"
          },
          {
            "label": "_scannerPoolChainId",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:54"
          },
          {
            "label": "registrationDelay",
            "offset": 0,
            "slot": "514",
            "type": "t_uint256",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "515",
            "type": "t_array(t_uint256)38_storage",
            "contract": "ScannerPoolRegistryCore",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryCore.sol:569"
          },
          {
            "label": "_managers",
            "offset": 0,
            "slot": "553",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)",
            "contract": "ScannerPoolRegistryManaged",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryManaged.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "554",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ScannerPoolRegistryManaged",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistryManaged.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ScannerPoolRegistry",
            "src": "contracts/components/scanner_pools/ScannerPoolRegistry.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]",
            "numberOfBytes": "1216"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)28279": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ScannerNode)17176_storage)": {
            "label": "mapping(address => struct ScannerPoolRegistryCore.ScannerNode)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)14162_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeThreshold)28146_storage)": {
            "label": "mapping(uint256 => struct IStakeSubject.StakeThreshold)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)14162_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)6248_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ScannerNode)17176_storage": {
            "label": "struct ScannerPoolRegistryCore.ScannerNode",
            "members": [
              {
                "label": "registered",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "disabled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "scannerPoolId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28146_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a2aeacce344ad816b817f16093db6c7af9d34fb64646d1313b341592151d0142": {
      "address": "0x94bb1C019F23da25e6186831c88372422050bAE8",
      "txHash": "0x01c87f1e5ec45491ef1b033453bb4ca497f0968fa115cfbc50793f579fc1b2b2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_commits",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "FrontRunningProtection",
            "src": "contracts/tools/FrontRunningProtection.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_subjectGateway",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IStakeSubjectGateway)28279",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:16",
            "retypedFrom": "IStakeController",
            "renamedFrom": "_stakeController"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)4_storage",
            "contract": "DirectStakeSubjectUpgradeable",
            "src": "contracts/components/staking/stake_subjects/DirectStakeSubject.sol:64"
          },
          {
            "label": "_stakeThreshold",
            "offset": 0,
            "slot": "407",
            "type": "t_struct(StakeThreshold)28146_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:14"
          },
          {
            "label": "frontRunningDelay",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)41_storage",
            "contract": "AgentRegistryCore",
            "src": "contracts/components/agents/AgentRegistryCore.sol:199"
          },
          {
            "label": "_disabled",
            "offset": 0,
            "slot": "452",
            "type": "t_mapping(t_uint256,t_struct(BitMap)13720_storage)",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AgentRegistryEnable",
            "src": "contracts/components/agents/AgentRegistryEnable.sol:157"
          },
          {
            "label": "_agentMetadata",
            "offset": 0,
            "slot": "502",
            "type": "t_mapping(t_uint256,t_struct(AgentMetadata)15948_storage)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:15"
          },
          {
            "label": "_agentMetadataUniqueness",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryMetadata",
            "src": "contracts/components/agents/AgentRegistryMetadata.sol:69"
          },
          {
            "label": "_allAgents",
            "offset": 0,
            "slot": "552",
            "type": "t_struct(UintSet)14319_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:12"
          },
          {
            "label": "_chainAgents",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_uint256,t_struct(UintSet)14319_storage)",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "555",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AgentRegistryEnumerable",
            "src": "contracts/components/agents/AgentRegistryEnumerable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "603",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AgentRegistry",
            "src": "contracts/components/agents/AgentRegistry.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeSubjectGateway)28279": {
            "label": "contract IStakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AgentMetadata)15948_storage)": {
            "label": "mapping(uint256 => struct AgentRegistryMetadata.AgentMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BitMap)13720_storage)": {
            "label": "mapping(uint256 => struct BitMaps.BitMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)14319_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AgentMetadata)15948_storage": {
            "label": "struct AgentRegistryMetadata.AgentMetadata",
            "members": [
              {
                "label": "version",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "chainIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(BitMap)13720_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeThreshold)28146_storage": {
            "label": "struct IStakeSubject.StakeThreshold",
            "members": [
              {
                "label": "min",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "max",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "activated",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UintSet)14319_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7ad20346517a088dd74b6148b890b0a6d7493a03e6f9a0238711b33aa9c1ac53": {
      "address": "0x74bc6EF72B84581aCAB56bd180c1C7A0CCaeECD3",
      "txHash": "0x31eff2d5395b7b1bac33941661f28432912c755da68d2c7b173d7f18a1243422",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_agents",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(AgentRegistry)14973",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:18"
          },
          {
            "label": "_scanners_deprecated",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(ScannerRegistry)19466",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:20",
            "renamedFrom": "_scanners"
          },
          {
            "label": "scannerToAgents",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(UintSet)14319_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:21"
          },
          {
            "label": "agentToScanners",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(UintSet)14319_storage)",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:22"
          },
          {
            "label": "_scannerPools",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(ScannerPoolRegistry)17134",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)47_storage",
            "contract": "Dispatch",
            "src": "contracts/components/dispatch/Dispatch.sol:345"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AgentRegistry)14973": {
            "label": "contract AgentRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerPoolRegistry)17134": {
            "label": "contract ScannerPoolRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ScannerRegistry)19466": {
            "label": "contract ScannerRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)14319_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)13861_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)14319_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13861_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b040674fa9742ff0c5ebcd025302530c9b4aaa6b3d1f35bdecea30be9747935f": {
      "address": "0x860757a3e9b72deD32CF15ea64f5425533442Fd9",
      "txHash": "0x344780255c93f2b169b034d8d3ddc7d04afd74d66fb253dca45a400386451e01",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "scannerNodeVersion",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:19"
          },
          {
            "label": "scannerNodeBetaVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ScannerNodeVersion",
            "src": "contracts/components/scanners/ScannerNodeVersion.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6880fab365809b629247da3c969776e33cb842f0aea35d6ccf3a244aa49364ef": {
      "address": "0x18Ca964A5C1a5778fA3519ca6E2Dfc449A5b675b",
      "txHash": "0xb483e7a0167438096558f0103320d2a375b4a29275c09b325c67231a17460413",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_accessControl",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAccessControl)9925",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessManagedUpgradeable",
            "src": "contracts/components/utils/AccessManaged.sol:68"
          },
          {
            "label": "_deprecated_router",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:16",
            "retypedFrom": "contract IRouter",
            "renamedFrom": "_router"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "RoutedUpgradeable",
            "src": "contracts/components/utils/Routed.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseComponentUpgradeable",
            "src": "contracts/components/BaseComponentUpgradeable.sol:62"
          },
          {
            "label": "_machines",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint256,t_enum(State)29223)",
            "contract": "StateMachineController",
            "src": "contracts/components/utils/StateMachines.sol:51"
          },
          {
            "label": "_proposalIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)10782_storage",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:48"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(Proposal)26517_storage)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:49"
          },
          {
            "label": "deposits",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:50"
          },
          {
            "label": "penalties",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_struct(SlashPenalty)26503_storage)",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:51"
          },
          {
            "label": "slashingExecutor",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(ISlashingExecutor)26424",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:52"
          },
          {
            "label": "subjectGateway",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(StakeSubjectGateway)28895",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:54",
            "renamedFrom": "stakingParameters"
          },
          {
            "label": "depositAmount",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:55"
          },
          {
            "label": "slashPercentToProposer",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "SlashingController",
            "src": "contracts/components/staking/slashing/SlashingController.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)9925": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(ISlashingExecutor)26424": {
            "label": "contract ISlashingExecutor",
            "numberOfBytes": "20"
          },
          "t_contract(StakeSubjectGateway)28895": {
            "label": "contract StakeSubjectGateway",
            "numberOfBytes": "20"
          },
          "t_enum(PenaltyMode)26497": {
            "label": "enum SlashingController.PenaltyMode",
            "members": [
              "UNDEFINED",
              "MIN_STAKE",
              "CURRENT_STAKE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(State)29223": {
            "label": "enum StateMachines.State",
            "members": [
              "_00",
              "_01",
              "_02",
              "_03",
              "_04",
              "_05",
              "_06",
              "_07",
              "_08",
              "_09",
              "_10",
              "_11",
              "_12",
              "_13",
              "_14",
              "_15"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(SlashPenalty)26503_storage)": {
            "label": "mapping(bytes32 => struct SlashingController.SlashPenalty)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(State)29223)": {
            "label": "mapping(uint256 => enum StateMachines.State)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Proposal)26517_storage)": {
            "label": "mapping(uint256 => struct SlashingController.Proposal)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)10782_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)26517_storage": {
            "label": "struct SlashingController.Proposal",
            "members": [
              {
                "label": "subjectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "penaltyId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subjectType",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(SlashPenalty)26503_storage": {
            "label": "struct SlashingController.SlashPenalty",
            "members": [
              {
                "label": "percentSlashed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mode",
                "type": "t_enum(PenaltyMode)26497",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
